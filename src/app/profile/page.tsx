"use client";

import { useState, useEffect } from 'react';
import { useSimpleAuth } from '@/components/SimpleAuthProvider';
import { Header } from '@/components/Header';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { ProfileProgress } from '@/components/profile/ProfileProgress';
import { AutoSaveIndicator, useAutoSave } from '@/components/profile/AutoSaveIndicator';
import { FileUpload } from '@/components/profile/FileUpload';
import { QuickActions } from '@/components/profile/QuickActions';
import {
  User,
  Mail,
  Phone,
  MapPin,
  Calendar,
  Trophy,
  Shield,
  Camera,
  Save,
  Edit,
  CheckCircle,
  Info,
  Settings,
  Lock,
  Eye,
  EyeOff,
  Upload,
  Award,
  Target,
  Users,
  Building,
  Image as ImageIcon
} from 'lucide-react';

interface UserProfile {
  // –û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ
  firstName: string;
  lastName: string;
  middleName: string;
  email: string;
  phone: string;
  dateOfBirth: string;
  gender: string;

  // –†–æ–ª—ñ —Ç–∞ —Å—Ç–∞—Ç—É—Å
  roles: string[];
  primaryRole: string;
  membershipStatus: string;
  memberSince: string;

  // –ê–¥—Ä–µ—Å–∞ —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∏
  country: string;
  region: string;
  city: string;
  address: string;
  zipCode: string;

  // –°–ø–æ—Ä—Ç–∏–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
  club: string;
  coach: string;
  sportCategory: string;
  experience: string;
  specialization: string;

  // –û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
  bio: string;
  website: string;
  socialMedia: {
    instagram: string;
    facebook: string;
    telegram: string;
  };

  // –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
  achievements: string;
  competitions: Array<{
    name: string;
    date: string;
    place: string;
    category: string;
  }>;

  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
  isPublicProfile: boolean;
  showEmail: boolean;
  showPhone: boolean;
  emailNotifications: boolean;

  // –§–∞–π–ª–∏
  avatar: string;
  documents: Array<{
    name: string;
    type: string;
    url: string;
  }>;
}

// –°–ø–∏—Å–æ–∫ –∫–ª—É–±—ñ–≤ —Ç–∞ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ (–≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É –±—É–¥–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏—Å—å –∑ API)
const CLUBS_LIST = [
  "–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–± '–û—Ä—ñ–≥–∞–º—ñ'",
  "–°–ö '–î–∏–Ω–∞–º–æ' –ö–∏—ó–≤",
  "–°–ö '–®–∞—Ö—Ç–∞—Ä' –î–æ–Ω–µ—Ü—å–∫",
  "–°–ö '–î–Ω—ñ–ø—Ä–æ'",
  "–°–ö '–õ—å–≤—ñ–≤'",
  "–°–ö '–ó–æ—Ä—è' –õ—É–≥–∞–Ω—Å—å–∫",
  "–°–ö '–î–µ—Å–Ω–∞' –ß–µ—Ä–Ω—ñ–≥—ñ–≤",
  "–°–ö '–ö–æ–ª–æ—Å' –ö–æ–≤–∞–ª—ñ–≤–∫–∞",
  "–°–ö '–ú–∞—Ä—ñ—É–ø–æ–ª—å'",
  "–°–ö '–û–ª–µ–∫—Å–∞–Ω–¥—Ä—ñ—è'"
];

// –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ –ø–æ—Ä–æ–∂–Ω—ñ–π (–¥–µ–º–æ –ø—Ä–∏–±—Ä–∞–Ω–æ)
const COACHES_LIST: string[] = [];

export default function ProfilePage() {
  const { user, loading, updateUserData } = useSimpleAuth();
  const [profile, setProfile] = useState<UserProfile | null>(null);
  const [saving, setSaving] = useState(false);
  const [message, setMessage] = useState('');
  const [activeTab, setActiveTab] = useState('personal');
  const [profileLoaded, setProfileLoaded] = useState(false);
  const [editMode, setEditMode] = useState(false);
  const [passwordData, setPasswordData] = useState({
    currentPassword: '',
    newPassword: '',
    confirmPassword: ''
  });
  const [showPasswords, setShowPasswords] = useState({
    current: false,
    new: false,
    confirm: false
  });

  // State –¥–ª—è —Ä–µ–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∑ API
  const [availableClubs, setAvailableClubs] = useState<string[]>(CLUBS_LIST);
  const [availableCoaches, setAvailableCoaches] = useState<string[]>(COACHES_LIST);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ –∫–ª—É–±—ñ–≤ —Ç–∞ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ –∑ API
  const loadClubsAndCoaches = async () => {
    try {
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–ª—É–±–∏
      const clubsResponse = await fetch('/api/clubs/list');
      const clubsData = await clubsResponse.json();
      if (clubsData.success && clubsData.clubs) {
        setAvailableClubs(clubsData.clubs);
        console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${clubsData.clubs.length} –∫–ª—É–±—ñ–≤ –∑ API`);
      } else {
        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–ª—É–±–∏:', clubsData);
      }

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤
      const coachesResponse = await fetch('/api/coaches/list');
      const coachesData = await coachesResponse.json();
      console.log('üë®‚Äçüè´ –í—ñ–¥–ø–æ–≤—ñ–¥—å API —Ç—Ä–µ–Ω–µ—Ä—ñ–≤:', coachesData);

      if (coachesData.success && coachesData.coaches) {
        setAvailableCoaches(coachesData.coaches);
        console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${coachesData.coaches.length} —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ –∑ API:`, coachesData.coaches);
      } else {
        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤:', coachesData);
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ –∫–ª—É–±—ñ–≤/—Ç—Ä–µ–Ω–µ—Ä—ñ–≤:', error);
      console.warn('‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback —Å–ø–∏—Å–∫–∏');
    }
  };

  // –ê–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
  const saveProfile = async (profileData: UserProfile) => {
    try {
      console.log('üíæ –ü–æ—á–∏–Ω–∞—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é —á–µ—Ä–µ–∑ MySQL');
      console.log('üñºÔ∏è –ê–≤–∞—Ç–∞—Ä:', profileData.avatar ? `–ø—Ä–∏—Å—É—Ç–Ω—ñ–π (${profileData.avatar.length} —Å–∏–º–≤–æ–ª—ñ–≤)` : '–≤—ñ–¥—Å—É—Ç–Ω—ñ–π');
      console.log('üìÖ –î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è:', profileData.dateOfBirth);

      const fullName = `${profileData.firstName} ${profileData.lastName} ${profileData.middleName}`.trim();

      const profileToSave = {
        firstName: profileData.firstName,
        lastName: profileData.lastName,
        middleName: profileData.middleName,
        dateOfBirth: profileData.dateOfBirth,
        gender: profileData.gender,
        phone: profileData.phone,

        country: profileData.country,
        region: profileData.region,
        city: profileData.city,
        address: profileData.address,
        zipCode: profileData.zipCode,

        club: profileData.club,
        coach: profileData.coach,
        sportCategory: profileData.sportCategory,
        experience: profileData.experience,
        specialization: profileData.specialization,

        bio: profileData.bio,
        website: profileData.website,
        socialMedia: profileData.socialMedia,

        achievements: profileData.achievements,
        competitions: profileData.competitions,

        isPublicProfile: profileData.isPublicProfile,
        showEmail: profileData.showEmail,
        showPhone: profileData.showPhone,
        emailNotifications: profileData.emailNotifications,

        avatar: profileData.avatar,
        documents: profileData.documents || []
      };

      console.log('üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é —á–µ—Ä–µ–∑ API –¥–ª—è:', user?.email);

      const response = await fetch('/api/save-profile', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: user?.email,
          profileData: profileData
        })
      });

      const result = await response.json();

      if (result.success) {
        // –¢–∞–∫–æ–∂ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –≤ localStorage —è–∫ backup
        localStorage.setItem('user-profile-extended', JSON.stringify(profileData));
        console.log('‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ –≤ MySQL');
        console.log('‚úÖ –î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞:', profileData.dateOfBirth);
        return true;
      } else {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ MySQL:', result.error);
        console.error('‚ùå –î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:', result.details);
        return false;
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ MySQL:', error);
      return false;
    }
  };

  const { status: autoSaveStatus, lastSaved, manualSave } = useAutoSave(
    profile,
    saveProfile,
    2000 // –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏ –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏
  );

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω –ø—Ä–æ—Ñ—ñ–ª—é –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  useEffect(() => {
    console.log('üîÑ useEffect: profile –∑–º—ñ–Ω–∏–≤—Å—è');
    console.log('üîÑ   - dateOfBirth:', profile?.dateOfBirth);
    console.log('üîÑ   - achievements:', profile?.achievements);
    if (profile?.avatar) {
      console.log('üé® useEffect: profile.avatar –∑–º—ñ–Ω–∏–≤—Å—è, –¥–æ–≤–∂–∏–Ω–∞:', profile.avatar.length);
      console.log('üé® useEffect: profile.avatar –ø–µ—Ä—à—ñ 50 —Å–∏–º–≤–æ–ª—ñ–≤:', profile.avatar.substring(0, 50));
    } else {
      console.log('üé® useEffect: profile.avatar –ø—É—Å—Ç–∏–π –∞–±–æ undefined');
    }
  }, [profile]);

  useEffect(() => {
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–ø–∏—Å–∫–∏ –∫–ª—É–±—ñ–≤ —Ç–∞ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤
    loadClubsAndCoaches();

    if (user && !profileLoaded) {
      console.log('üîç –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', user.email, 'ID:', user.id);

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ–≤–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å —á–µ—Ä–µ–∑ API —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –ø—Ä–æ—Ñ—ñ–ª—å —â–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π
      loadProfileFromAPI();
    } else if (user && profileLoaded) {
      console.log('‚ú® –ü—Ä–æ—Ñ—ñ–ª—å –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
      console.log('‚ú®   - dateOfBirth:', profile?.dateOfBirth);
      console.log('‚ú®   - achievements:', profile?.achievements);
    }
  }, [user, profileLoaded]);

  const loadProfileFromAPI = async () => {
    try {
      console.log('üåê –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é —á–µ—Ä–µ–∑ API –¥–ª—è:', user?.email);

      const response = await fetch(`/api/user-info?email=${encodeURIComponent(user?.email || '')}`);
      const result = await response.json();

      if (result.success && result.user) {
        const apiUser = result.user;
        console.log('‚úÖ –ü–æ–≤–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ API:', {
          name: apiUser.name,
          date_of_birth: apiUser.date_of_birth,
          club: apiUser.club,
          coach: apiUser.coach,
          social_media: apiUser.social_media,
          achievements: apiUser.achievements ? apiUser.achievements.substring(0, 50) + '...' : null,
          avatar: apiUser.avatar ? '–ø—Ä–∏—Å—É—Ç–Ω—ñ–π' : '–≤—ñ–¥—Å—É—Ç–Ω—ñ–π'
        });

        // –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É –¥–ª—è input[type="date"]
        const formattedDate = apiUser.date_of_birth
          ? new Date(apiUser.date_of_birth).toISOString().split('T')[0]
          : '';

        console.log('üìÖ –î–∞—Ç–∞ –∑ API:', apiUser.date_of_birth);
        console.log('üìÖ –§–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞ –¥–ª—è input:', formattedDate);
        console.log('üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è –∑ API:', apiUser.achievements);
        console.log('üèÜ –ó–º–∞–≥–∞–Ω–Ω—è –∑ API:', apiUser.competitions);
        console.log('üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä –∑ API:', apiUser.coach);
        console.log('üì± –°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ –∑ API:', apiUser.social_media);

        // –§–æ—Ä–º—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∑ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
        setProfile({
          // –û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ
          firstName: apiUser.first_name || '',
          lastName: apiUser.last_name || '',
          middleName: apiUser.middle_name || '',
          email: apiUser.email || '',
          phone: apiUser.phone || '',
          dateOfBirth: formattedDate,
          gender: apiUser.gender || '',

          // –†–æ–ª—ñ —Ç–∞ —Å—Ç–∞—Ç—É—Å
          roles: apiUser.roles || ['athlete'],
          primaryRole: apiUser.roles?.[0] || 'athlete',
          membershipStatus: 'active',
          memberSince: apiUser.created_at || new Date().toISOString(),

          // –ê–¥—Ä–µ—Å–∞
          country: apiUser.country || '–£–∫—Ä–∞—ó–Ω–∞',
          region: apiUser.region || '',
          city: apiUser.city || '',
          address: apiUser.address || '',
          zipCode: apiUser.zip_code || '',

          // –°–ø–æ—Ä—Ç–∏–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
          club: apiUser.club || '',
          coach: apiUser.coach || '',
          sportCategory: apiUser.sport_category || '',
          experience: apiUser.experience || '',
          specialization: apiUser.specialization || '',

          // –û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
          bio: apiUser.bio || '',
          website: apiUser.website || '',
          socialMedia: apiUser.social_media || {
            instagram: '',
            facebook: '',
            telegram: ''
          },

          // –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
          achievements: apiUser.achievements || '',
          competitions: apiUser.competitions || [],

          // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          isPublicProfile: apiUser.is_public_profile ?? true,
          showEmail: apiUser.show_email ?? false,
          showPhone: apiUser.show_phone ?? false,
          emailNotifications: apiUser.email_notifications ?? true,

          // –§–∞–π–ª–∏
          avatar: apiUser.avatar || '',
          documents: apiUser.documents || []
        });

        console.log('‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ API');
        console.log('‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –ø—Ä–æ—Ñ—ñ–ª—ñ:');
        console.log('‚úÖ   - dateOfBirth:', formattedDate);
        console.log('‚úÖ   - achievements:', apiUser.achievements);
        console.log('‚úÖ   - competitions:', apiUser.competitions);
        console.log('‚úÖ   - coach:', apiUser.coach);
        console.log('‚úÖ   - socialMedia:', apiUser.social_media);

        setProfileLoaded(true);
        return;
      } else {
        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∑ API:', result.error);
        // Fallback –¥–æ —Å—Ç–∞—Ä–æ—ó –ª–æ–≥—ñ–∫–∏
        loadProfileFallback();
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∑ API:', error);
      // Fallback –¥–æ —Å—Ç–∞—Ä–æ—ó –ª–æ–≥—ñ–∫–∏
      loadProfileFallback();
    }
  };

  const loadProfileFallback = () => {
    console.log('‚è™ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback –ª–æ–≥—ñ–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é');

    // –°–ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –∑ localStorage
    const savedProfile = localStorage.getItem('user-profile-extended');
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage profile:', savedProfile ? '–∑–Ω–∞–π–¥–µ–Ω–æ' : '–ø–æ—Ä–æ–∂–Ω—å–æ');

    if (savedProfile) {
      try {
        const parsedProfile = JSON.parse(savedProfile);
        console.log('üìù –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ localStorage, –∞–≤–∞—Ç–∞—Ä:', parsedProfile.avatar);
        // –û–Ω–æ–≤–ª—é—î–º–æ email —Ç–∞ —Ä–æ–ª—ñ –∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        setProfile({
          ...parsedProfile,
          email: user?.email || '',
          roles: user?.roles || ['athlete'],
          primaryRole: user?.roles?.[0] || 'athlete',
          memberSince: user?.createdAt || new Date().toISOString(),
        });
        console.log('‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ localStorage');
        return;
      } catch (error) {
        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é:', error);
      }
    }

    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–æ–≤–∏–π
    console.log('üÜï –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–æ–≤–∏–π –ø—Ä–æ—Ñ—ñ–ª—å');
    const nameParts = (user?.name || '').split(' ').filter(part => part.trim());
    const firstName = nameParts[0] || '';
    const lastName = nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';
    const middleName = nameParts.length > 2 ? nameParts.slice(1, -1).join(' ') : '';

    setProfile({
      // –û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ
      firstName,
      lastName,
      middleName,
      email: user?.email || '',
      phone: '',
      dateOfBirth: '',
      gender: '',

      // –†–æ–ª—ñ —Ç–∞ —Å—Ç–∞—Ç—É—Å
      roles: user?.roles || ['athlete'],
      primaryRole: user?.roles?.[0] || 'athlete',
      membershipStatus: 'active',
      memberSince: user?.createdAt || new Date().toISOString(),

      // –ê–¥—Ä–µ—Å–∞ —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∏
      country: '–£–∫—Ä–∞—ó–Ω–∞',
      region: '',
      city: '',
      address: '',
      zipCode: '',

      // –°–ø–æ—Ä—Ç–∏–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
      club: '',
      coach: '',
      sportCategory: '',
      experience: '',
      specialization: '',

      // –û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
      bio: '',
      website: '',
      socialMedia: {
        instagram: '',
        facebook: '',
        telegram: ''
      },

      // –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
      achievements: '',
      competitions: [],

      // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
      isPublicProfile: true,
      showEmail: false,
      showPhone: false,
      emailNotifications: true,

      // –§–∞–π–ª–∏
      avatar: '',
      documents: []
    });

    setProfileLoaded(true);
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Header />
        <div className="container mx-auto px-4 py-8">
          <div className="flex items-center justify-center h-64">
            <div className="text-center">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4" />
              <p className="text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é...</p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Header />
        <div className="container mx-auto px-4 py-8">
          <div className="text-center">
            <h1 className="text-2xl font-bold mb-4">–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h1>
            <p className="text-gray-600 mb-4">–£–≤—ñ–π–¥—ñ—Ç—å –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø—Ä–æ—Ñ—ñ–ª—é</p>
            <Button onClick={() => window.location.href = '/login'}>
              –£–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
            </Button>
          </div>
        </div>
      </div>
    );
  }

  const getRoleLabel = (role: string) => {
    switch (role) {
      case "athlete": return "–°–ø–æ—Ä—Ç—Å–º–µ–Ω";
      case "club_owner": return "–í–ª–∞—Å–Ω–∏–∫ –∫–ª—É–±—É";
      case "coach_judge": return "–¢—Ä–µ–Ω–µ—Ä/–°—É–¥–¥—è";
      case "admin": return "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä";
      default: return role;
    }
  };

  const handleInputChange = (field: string, value: any) => {
    console.log(`üìù –ó–º—ñ–Ω—é—î–º–æ –ø–æ–ª–µ "${field}":`, field === 'avatar' ? 'BASE64_DATA_LENGTH:' + (value?.length || 0) : value);
    setProfile(prev => {
      if (!prev) return prev;
      const newProfile = { ...prev, [field]: value };
      if (field === 'avatar') {
        console.log('üìù üñºÔ∏è –ê–í–ê–¢–ê–† –û–ù–û–í–õ–ï–ù–û –í –°–¢–ê–ù–Ü! –î–æ–≤–∂–∏–Ω–∞:', value?.length || 0);
        console.log('üìù üñºÔ∏è profile.avatar –∑–∞—Ä–∞–∑:', newProfile.avatar ? '–í–°–¢–ê–ù–û–í–õ–ï–ù–û' : '–ü–£–°–¢–û');
      }
      return newProfile;
    });
  };

  const handleNestedInputChange = (parent: string, field: string, value: string) => {
    setProfile(prev => prev ? {
      ...prev,
      [parent]: {
        ...prev[parent as keyof UserProfile] as any,
        [field]: value
      }
    } : prev);
  };

  const handleSave = async () => {
    if (!profile) return;

    setSaving(true);
    const success = await saveProfile(profile);

    if (success) {
      setMessage('‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!');
      setEditMode(false);
    } else {
      setMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é');
    }

    setTimeout(() => setMessage(''), 3000);
    setSaving(false);
  };

  const handlePasswordChange = async () => {
    if (passwordData.newPassword !== passwordData.confirmPassword) {
      setMessage('‚ùå –ù–æ–≤—ñ –ø–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
      setTimeout(() => setMessage(''), 3000);
      return;
    }

    if (passwordData.newPassword.length < 6) {
      setMessage('‚ùå –ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤');
      setTimeout(() => setMessage(''), 3000);
      return;
    }

    // –¢—É—Ç –±–∏ –±—É–ª–∞ –ª–æ–≥—ñ–∫–∞ –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—è
    setMessage('‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ!');
    setPasswordData({ currentPassword: '', newPassword: '', confirmPassword: '' });
    setTimeout(() => setMessage(''), 3000);
  };

  const handleFileUpload = (type: 'avatar' | 'document', file: File | null, url?: string) => {
    if (!file) {
      console.log('‚ö†Ô∏è –§–∞–π–ª –≤—ñ–¥—Å—É—Ç–Ω—ñ–π:', { file, url });
      return;
    }

    console.log(`üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${type}:`, { fileName: file.name, fileSize: file.size });

    if (type === 'avatar') {
      console.log('üñºÔ∏è –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –∞–≤–∞—Ç–∞—Ä –≤ Base64 –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º—ñ–∂ —Å–µ–∞–Ω—Å–∞–º–∏');

      // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —Ñ–∞–π–ª –≤ Base64 –¥–ª—è –ø–æ—Å—Ç—ñ–π–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
      const reader = new FileReader();
      reader.onload = (e) => {
        const base64 = e.target?.result as string;
        console.log('üì∏ –ê–≤–∞—Ç–∞—Ä –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Base64:', base64.substring(0, 50) + '...');
        handleInputChange('avatar', base64);
        setMessage('‚úÖ –ê–≤–∞—Ç–∞—Ä –æ–Ω–æ–≤–ª–µ–Ω–æ! –ó–±–µ—Ä–µ–∂—ñ—Ç—å –∑–º—ñ–Ω–∏.');
        setTimeout(() => setMessage(''), 3000);
      };
      reader.onerror = () => {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –∞–≤–∞—Ç–∞—Ä–∞ –≤ Base64');
        setMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞');
        setTimeout(() => setMessage(''), 3000);
      };
      reader.readAsDataURL(file);
    } else {
      // –î–ª—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Blob URL (–Ω–µ —Ç–∞–∫ –∫—Ä–∏—Ç–∏—á–Ω–æ)
      const newDoc = {
        name: file.name,
        type: file.type,
        url: url || URL.createObjectURL(file)
      };
      setProfile(prev => prev ? {
        ...prev,
        documents: [...prev.documents, newDoc]
      } : prev);
      setMessage('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –¥–æ–¥–∞–Ω–æ!');
      setTimeout(() => setMessage(''), 3000);
    }
  };

  const handleQuickAction = (action: string) => {
    switch (action) {
      case 'export-pdf':
        setMessage('üìÑ –ï–∫—Å–ø–æ—Ä—Ç –≤ PDF –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º');
        break;
      case 'generate-qr':
        setMessage('üì± QR-–∫–æ–¥ –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º');
        break;
      case 'my-athletes':
        setMessage('üë• –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞–º–∏ –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–µ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º');
        break;
      default:
        console.log('–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è:', action);
    }
    setTimeout(() => setMessage(''), 3000);
  };

  const addCompetition = () => {
    const newCompetition = {
      name: '',
      date: '',
      place: '',
      category: ''
    };
    setProfile(prev => prev ? {
      ...prev,
      competitions: [...prev.competitions, newCompetition]
    } : prev);
  };

  const removeCompetition = (index: number) => {
    setProfile(prev => prev ? {
      ...prev,
      competitions: prev.competitions.filter((_, i) => i !== index)
    } : prev);
  };

  const updateCompetition = (index: number, field: string, value: string) => {
    setProfile(prev => prev ? {
      ...prev,
      competitions: prev.competitions.map((comp, i) =>
        i === index ? { ...comp, [field]: value } : comp
      )
    } : prev);
  };

  if (!profile) return null;

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />

      <div className="container mx-auto px-4 py-8">
        <div className="max-w-6xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ—ñ–ª—é –∑ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è */}
          <div className="mb-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-6">
                {/* –ê–≤–∞—Ç–∞—Ä */}
                <div className="relative">
                  <Avatar className="h-24 w-24">
                    <AvatarImage src={profile.avatar} alt={profile.firstName} />
                    <AvatarFallback className="text-2xl bg-gradient-to-br from-blue-500 to-purple-600 text-white">
                      {profile.firstName.charAt(0)}{profile.lastName.charAt(0)}
                    </AvatarFallback>
                  </Avatar>
                  {/* –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê –ê–í–ê–¢–ê–†–ê - –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ useEffect */}
                  {editMode && (
                    <Button
                      size="sm"
                      className="absolute -bottom-2 -right-2 rounded-full p-2 h-8 w-8"
                      onClick={(e) => {
                        e.stopPropagation();
                        console.log('üîµ –ö–Ω–æ–ø–∫–∞ –∫–∞–º–µ—Ä–∏ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤');
                        setActiveTab('documents');
                        // –î–æ–¥–∞—Ç–∫–æ–≤–æ –ø—Ä–æ–∫—Ä—É—á—É—î–º–æ –¥–æ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
                        setTimeout(() => {
                          const documentsElement = document.querySelector('[data-tab="documents"]');
                          if (documentsElement) {
                            documentsElement.scrollIntoView({ behavior: 'smooth' });
                          }
                        }, 100);
                      }}
                    >
                      <Camera className="h-4 w-4" />
                    </Button>
                  )}
                </div>

                {/* –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                <div>
                  <h1 className="text-3xl font-bold text-gray-900">
                    {profile.firstName} {profile.lastName}
                  </h1>
                  <div className="flex items-center space-x-4 mt-2">
                    <Badge variant="outline" className="bg-blue-50 text-blue-700 border-blue-200">
                      {getRoleLabel(profile.primaryRole)}
                    </Badge>
                    <Badge variant="outline" className="bg-green-50 text-green-700 border-green-200">
                      {profile.membershipStatus === 'active' ? '–ê–∫—Ç–∏–≤–Ω–∏–π —á–ª–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π'}
                    </Badge>
                    {profile.club && (
                      <Badge variant="outline" className="bg-purple-50 text-purple-700 border-purple-200">
                        {profile.club}
                      </Badge>
                    )}
                  </div>
                  <p className="text-gray-600 mt-1">
                    –ß–ª–µ–Ω –§–£–°–ê–§ –∑ {new Date(profile.memberSince).toLocaleDateString('uk-UA')}
                  </p>
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π —Ç–∞ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è */}
              <div className="flex flex-col items-end space-y-3">
                <div className="flex items-center space-x-3">
                  {editMode ? (
                    <>
                      <Button
                        onClick={handleSave}
                        disabled={saving}
                        className="bg-green-600 hover:bg-green-700"
                      >
                        <Save className="h-4 w-4 mr-2" />
                        {saving ? '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : '–ó–±–µ—Ä–µ–≥—Ç–∏'}
                      </Button>
                      <Button
                        variant="outline"
                        onClick={() => setEditMode(false)}
                      >
                        –°–∫–∞—Å—É–≤–∞—Ç–∏
                      </Button>
                    </>
                  ) : (
                    <Button
                      onClick={() => setEditMode(true)}
                      className="bg-blue-600 hover:bg-blue-700"
                    >
                      <Edit className="h-4 w-4 mr-2" />
                      –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                    </Button>
                  )}
                </div>

                {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è */}
                {editMode && (
                  <AutoSaveIndicator
                    status={autoSaveStatus}
                    lastSaved={lastSaved}
                    onSave={manualSave}
                  />
                )}
              </div>
            </div>

            {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è */}
            {message && (
              <Alert className={`mt-4 ${message.startsWith('‚úÖ') ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'}`}>
                <CheckCircle className="h-4 w-4" />
                <AlertDescription>{message}</AlertDescription>
              </Alert>
            )}
          </div>

          {/* –ü—Ä–æ–≥—Ä–µ—Å –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é */}
          <ProfileProgress
            profile={profile}
            onTabSelect={setActiveTab}
          />

          {/* –®–≤–∏–¥–∫—ñ –¥—ñ—ó */}
          <QuickActions
            userProfile={{
              firstName: profile.firstName,
              lastName: profile.lastName,
              email: user.email,
              roles: user.roles || [],
              isPublicProfile: profile.isPublicProfile,
              club: profile.club
            }}
            onAction={handleQuickAction}
          />

          {/* –í–∫–ª–∞–¥–∫–∏ –ø—Ä–æ—Ñ—ñ–ª—é */}
          <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-6">
            <TabsList className="grid w-full grid-cols-6">
              <TabsTrigger value="personal">–û—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ</TabsTrigger>
              <TabsTrigger value="sport">–°–ø–æ—Ä—Ç</TabsTrigger>
              <TabsTrigger value="achievements">–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è</TabsTrigger>
              <TabsTrigger value="documents">–î–æ–∫—É–º–µ–Ω—Ç–∏</TabsTrigger>
              <TabsTrigger value="settings">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</TabsTrigger>
              <TabsTrigger value="security">–ë–µ–∑–ø–µ–∫–∞</TabsTrigger>
            </TabsList>

            {/* –û—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ */}
            <TabsContent value="personal" className="space-y-6">
              <div className="grid md:grid-cols-2 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center justify-between">
                      <div className="flex items-center">
                        <User className="h-5 w-5 mr-2" />
                        –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
                      </div>
                      {editMode && <Badge variant="secondary" className="text-xs">–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è</Badge>}
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="grid grid-cols-3 gap-4">
                      <div>
                        <Label>–ü—Ä—ñ–∑–≤–∏—â–µ</Label>
                        <Input
                          value={profile.lastName}
                          onChange={(e) => handleInputChange('lastName', e.target.value)}
                          disabled={!editMode}
                          className={editMode ? 'border-blue-300 focus:border-blue-500' : ''}
                        />
                      </div>
                      <div>
                        <Label>–Ü–º'—è</Label>
                        <Input
                          value={profile.firstName}
                          onChange={(e) => handleInputChange('firstName', e.target.value)}
                          disabled={!editMode}
                          className={editMode ? 'border-blue-300 focus:border-blue-500' : ''}
                        />
                      </div>
                      <div>
                        <Label>–ü–æ –±–∞—Ç—å–∫–æ–≤—ñ</Label>
                        <Input
                          value={profile.middleName}
                          onChange={(e) => handleInputChange('middleName', e.target.value)}
                          disabled={!editMode}
                          className={editMode ? 'border-blue-300 focus:border-blue-500' : ''}
                        />
                      </div>
                    </div>

                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <Label>–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è</Label>
                        <Input
                          type="date"
                          value={profile.dateOfBirth}
                          onChange={(e) => handleInputChange('dateOfBirth', e.target.value)}
                          disabled={!editMode}
                          className={editMode ? 'border-blue-300 focus:border-blue-500' : ''}
                        />
                      </div>
                      <div>
                        <Label>–°—Ç–∞—Ç—å</Label>
                        <select
                          value={profile.gender}
                          onChange={(e) => handleInputChange('gender', e.target.value)}
                          disabled={!editMode}
                          className={`w-full p-2 border rounded-md ${editMode ? 'border-blue-300 focus:border-blue-500' : ''} disabled:bg-gray-100`}
                        >
                          <option value="">–ù–µ –≤–∫–∞–∑–∞–Ω–æ</option>
                          <option value="male">–ß–æ–ª–æ–≤—ñ—á–∞</option>
                          <option value="female">–ñ—ñ–Ω–æ—á–∞</option>
                        </select>
                      </div>
                    </div>

                    <div>
                      <Label>–ü—Ä–æ —Å–µ–±–µ</Label>
                      <Textarea
                        value={profile.bio}
                        onChange={(e) => handleInputChange('bio', e.target.value)}
                        disabled={!editMode}
                        placeholder="–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ..."
                        rows={3}
                        className={editMode ? 'border-blue-300 focus:border-blue-500' : ''}
                      />
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Mail className="h-5 w-5 mr-2" />
                      –ö–æ–Ω—Ç–∞–∫—Ç–∏
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label>Email</Label>
                      <Input
                        type="email"
                        value={profile.email}
                        disabled
                        className="bg-gray-100"
                      />
                      <p className="text-xs text-gray-500 mt-1">
                        Email –Ω–µ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏
                      </p>
                    </div>

                    <div>
                      <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                      <Input
                        type="tel"
                        value={profile.phone}
                        onChange={(e) => handleInputChange('phone', e.target.value)}
                        disabled={!editMode}
                        placeholder="+380XXXXXXXXX"
                      />
                    </div>

                    <div>
                      <Label>–í–µ–±-—Å–∞–π—Ç</Label>
                      <Input
                        type="url"
                        value={profile.website}
                        onChange={(e) => handleInputChange('website', e.target.value)}
                        disabled={!editMode}
                        placeholder="https://..."
                      />
                    </div>

                    <div className="space-y-3">
                      <Label>–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ</Label>
                      <div className="space-y-2">
                        <Input
                          value={profile.socialMedia.instagram}
                          onChange={(e) => handleNestedInputChange('socialMedia', 'instagram', e.target.value)}
                          disabled={!editMode}
                          placeholder="Instagram username"
                        />
                        <Input
                          value={profile.socialMedia.facebook}
                          onChange={(e) => handleNestedInputChange('socialMedia', 'facebook', e.target.value)}
                          disabled={!editMode}
                          placeholder="Facebook profile"
                        />
                        <Input
                          value={profile.socialMedia.telegram}
                          onChange={(e) => handleNestedInputChange('socialMedia', 'telegram', e.target.value)}
                          disabled={!editMode}
                          placeholder="Telegram username"
                        />
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center">
                    <MapPin className="h-5 w-5 mr-2" />
                    –ê–¥—Ä–µ—Å–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid md:grid-cols-3 gap-4">
                    <div>
                      <Label>–ö—Ä–∞—ó–Ω–∞</Label>
                      <Input
                        value={profile.country}
                        onChange={(e) => handleInputChange('country', e.target.value)}
                        disabled={!editMode}
                      />
                    </div>
                    <div>
                      <Label>–û–±–ª–∞—Å—Ç—å</Label>
                      <Input
                        value={profile.region}
                        onChange={(e) => handleInputChange('region', e.target.value)}
                        disabled={!editMode}
                      />
                    </div>
                    <div>
                      <Label>–ú—ñ—Å—Ç–æ</Label>
                      <Input
                        value={profile.city}
                        onChange={(e) => handleInputChange('city', e.target.value)}
                        disabled={!editMode}
                      />
                    </div>
                  </div>
                  <div className="grid md:grid-cols-3 gap-4 mt-4">
                    <div className="md:col-span-2">
                      <Label>–ê–¥—Ä–µ—Å–∞</Label>
                      <Input
                        value={profile.address}
                        onChange={(e) => handleInputChange('address', e.target.value)}
                        disabled={!editMode}
                        placeholder="–í—É–ª–∏—Ü—è, –±—É–¥–∏–Ω–æ–∫, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                      />
                    </div>
                    <div>
                      <Label>–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å</Label>
                      <Input
                        value={profile.zipCode}
                        onChange={(e) => handleInputChange('zipCode', e.target.value)}
                        disabled={!editMode}
                      />
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            {/* –°–ø–æ—Ä—Ç–∏–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
            <TabsContent value="sport" className="space-y-6">
              <div className="grid md:grid-cols-2 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Trophy className="h-5 w-5 mr-2" />
                      –°–ø–æ—Ä—Ç–∏–≤–Ω–∞ –∫–∞—Ä'—î—Ä–∞
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label>–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–±</Label>
                      <select
                        value={profile.club}
                        onChange={(e) => handleInputChange('club', e.target.value)}
                        disabled={!editMode}
                        className="w-full p-2 border rounded-md disabled:bg-gray-100"
                      >
                        <option value="">–û–±–µ—Ä—ñ—Ç—å –∫–ª—É–±</option>
                        {availableClubs.map((club) => (
                          <option key={club} value={club}>
                            {club}
                          </option>
                        ))}
                        <option value="other">–Ü–Ω—à–∏–π –∫–ª—É–± (–≤–≤–µ–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É)</option>
                      </select>
                      {profile.club === "other" && editMode && (
                        <Input
                          className="mt-2"
                          placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∫–ª—É–±—É"
                          onChange={(e) => handleInputChange('club', e.target.value)}
                        />
                      )}
                    </div>

                    <div>
                      <Label>–¢—Ä–µ–Ω–µ—Ä</Label>
                      <select
                        value={availableCoaches.includes(profile.coach) ? profile.coach : "other"}
                        onChange={(e) => {
                          if (e.target.value === "") {
                            handleInputChange('coach', '');
                          } else if (e.target.value !== "other") {
                            handleInputChange('coach', e.target.value);
                          }
                          // –Ø–∫—â–æ –≤–∏–±—Ä–∞–Ω–æ "other", –∑–∞–ª–∏—à–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ input
                        }}
                        disabled={!editMode}
                        className="w-full p-2 border rounded-md disabled:bg-gray-100"
                      >
                        <option value="">–û–±–µ—Ä—ñ—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞</option>
                        {availableCoaches.map((coach) => (
                          <option key={coach} value={coach}>
                            {coach}
                          </option>
                        ))}
                        <option value="other">–Ü–Ω—à–∏–π —Ç—Ä–µ–Ω–µ—Ä (–≤–≤–µ–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É)</option>
                      </select>
                      {editMode && (!availableCoaches.includes(profile.coach) || availableCoaches.length === 0) && (
                        <Input
                          className="mt-2"
                          placeholder="–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è —Ç—Ä–µ–Ω–µ—Ä–∞"
                          value={profile.coach || ''}
                          onChange={(e) => handleInputChange('coach', e.target.value)}
                        />
                      )}
                    </div>

                    <div>
                      <Label>–°–ø–æ—Ä—Ç–∏–≤–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è</Label>
                      <select
                        value={profile.sportCategory}
                        onChange={(e) => handleInputChange('sportCategory', e.target.value)}
                        disabled={!editMode}
                        className="w-full p-2 border rounded-md disabled:bg-gray-100"
                      >
                        <option value="">–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é</option>
                        <option value="no-rank">–ë–µ–∑ —Ä–æ–∑—Ä—è–¥—É</option>
                        <option value="youth-3">3 —é–Ω–∞—Ü—å–∫–∏–π —Ä–æ–∑—Ä—è–¥</option>
                        <option value="youth-2">2 —é–Ω–∞—Ü—å–∫–∏–π —Ä–æ–∑—Ä—è–¥</option>
                        <option value="youth-1">1 —é–Ω–∞—Ü—å–∫–∏–π —Ä–æ–∑—Ä—è–¥</option>
                        <option value="sport-3">3 —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —Ä–æ–∑—Ä—è–¥</option>
                        <option value="sport-2">2 —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —Ä–æ–∑—Ä—è–¥</option>
                        <option value="sport-1">1 —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —Ä–æ–∑—Ä—è–¥</option>
                        <option value="cms">–ö–ú–°</option>
                        <option value="ms">–ú–°</option>
                        <option value="msic">–ú–°–ú–ö</option>
                      </select>
                    </div>

                    <div>
                      <Label>–°—Ç–∞–∂ —É —Å–ø–æ—Ä—Ç—ñ</Label>
                      <Input
                        value={profile.experience}
                        onChange={(e) => handleInputChange('experience', e.target.value)}
                        disabled={!editMode}
                        placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 5 —Ä–æ–∫—ñ–≤"
                      />
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Target className="h-5 w-5 mr-2" />
                      –°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label>–û—Å–Ω–æ–≤–Ω–∞ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è</Label>
                      <select
                        value={profile.specialization}
                        onChange={(e) => handleInputChange('specialization', e.target.value)}
                        disabled={!editMode}
                        className="w-full p-2 border rounded-md disabled:bg-gray-100"
                      >
                        <option value="">–û–±–µ—Ä—ñ—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é</option>
                        <option value="individual">–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞</option>
                        <option value="pair">–ó–º—ñ—à–∞–Ω—ñ –ø–∞—Ä–∏</option>
                        <option value="trio">–¢—Ä—ñ–æ</option>
                        <option value="group">–ì—Ä—É–ø–∞ (5 –æ—Å—ñ–±)</option>
                        <option value="aerobic-dance">–ê–µ—Ä–æ–±—ñ–∫-–¥–∞–Ω—Å</option>
                        <option value="aerobic-step">–°—Ç–µ–ø-–∞–µ—Ä–æ–±—ñ–∫–∞</option>
                        <option value="hip-hop">–•—ñ–ø-—Ö–æ–ø</option>
                      </select>
                    </div>

                    <div>
                      <Label>–î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–≤–∏—á–∫–∏</Label>
                      <Textarea
                        value={profile.achievements}
                        onChange={(e) => handleInputChange('achievements', e.target.value)}
                        disabled={!editMode}
                        placeholder="–û–ø–∏—à—ñ—Ç—å –≤–∞—à—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–≤–∏—á–∫–∏, –¥–æ—Å–≤—ñ–¥ —Ç–æ—â–æ"
                        rows={4}
                      />
                    </div>

                    {/* –†–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */}
                    <div>
                      <Label>–í–∞—à—ñ —Ä–æ–ª—ñ –≤ –§–£–°–ê–§</Label>
                      <div className="flex flex-wrap gap-2 mt-2">
                        {profile.roles.map(role => (
                          <Badge key={role} variant="secondary" className="bg-blue-100 text-blue-800">
                            {getRoleLabel(role)}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>

            {/* –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è */}
            <TabsContent value="achievements" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center justify-between">
                    <div className="flex items-center">
                      <Award className="h-5 w-5 mr-2" />
                      –£—á–∞—Å—Ç—å —É –∑–º–∞–≥–∞–Ω–Ω—è—Ö
                    </div>
                    {editMode && (
                      <Button size="sm" onClick={addCompetition}>
                        –î–æ–¥–∞—Ç–∏ –∑–º–∞–≥–∞–Ω–Ω—è
                      </Button>
                    )}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  {profile.competitions.length === 0 ? (
                    <p className="text-gray-500 text-center py-8">
                      –ó–º–∞–≥–∞–Ω–Ω—è —â–µ –Ω–µ –¥–æ–¥–∞–Ω–æ
                    </p>
                  ) : (
                    <div className="space-y-4">
                      {profile.competitions.map((competition, index) => (
                        <div key={index} className="border rounded-lg p-4 bg-gray-50">
                          <div className="grid md:grid-cols-4 gap-4">
                            <div>
                              <Label>–ù–∞–∑–≤–∞ –∑–º–∞–≥–∞–Ω–Ω—è</Label>
                              <Input
                                value={competition.name}
                                onChange={(e) => updateCompetition(index, 'name', e.target.value)}
                                disabled={!editMode}
                                placeholder="–ö—É–±–æ–∫ –£–∫—Ä–∞—ó–Ω–∏"
                              />
                            </div>
                            <div>
                              <Label>–î–∞—Ç–∞</Label>
                              <Input
                                type="date"
                                value={competition.date}
                                onChange={(e) => updateCompetition(index, 'date', e.target.value)}
                                disabled={!editMode}
                              />
                            </div>
                            <div>
                              <Label>–†–µ–∑—É–ª—å—Ç–∞—Ç</Label>
                              <Input
                                value={competition.place}
                                onChange={(e) => updateCompetition(index, 'place', e.target.value)}
                                disabled={!editMode}
                                placeholder="1 –º—ñ—Å—Ü–µ, —Ñ—ñ–Ω–∞–ª"
                              />
                            </div>
                            <div>
                              <Label>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è</Label>
                              <div className="flex items-center space-x-2">
                                <Input
                                  value={competition.category}
                                  onChange={(e) => updateCompetition(index, 'category', e.target.value)}
                                  disabled={!editMode}
                                  placeholder="Seniors"
                                />
                                {editMode && (
                                  <Button
                                    size="sm"
                                    variant="destructive"
                                    onClick={() => removeCompetition(index)}
                                  >
                                    √ó
                                  </Button>
                                )}
                              </div>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}
                </CardContent>
              </Card>
            </TabsContent>

            {/* –î–æ–∫—É–º–µ–Ω—Ç–∏ */}
            <TabsContent value="documents" className="space-y-6" data-tab="documents">
              <div className="grid md:grid-cols-2 gap-6">
                {/* –ê–≤–∞—Ç–∞—Ä */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <ImageIcon className="h-5 w-5 mr-2" />
                      –ê–≤–∞—Ç–∞—Ä –ø—Ä–æ—Ñ—ñ–ª—é
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    {editMode ? (
                      <FileUpload
                        type="avatar"
                        currentValue={profile.avatar}
                        onFileSelect={(file) => handleFileUpload('avatar', file)}
                        maxSize={2 * 1024 * 1024} // 2MB –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
                        preview={true}
                      />
                    ) : (
                      <div className="text-center py-8">
                        <Avatar className="h-32 w-32 mx-auto mb-4">
                          <AvatarImage src={profile.avatar} alt={profile.firstName} />
                          <AvatarFallback className="text-4xl bg-gradient-to-br from-blue-500 to-purple-600 text-white">
                            {profile.firstName.charAt(0)}{profile.lastName.charAt(0)}
                          </AvatarFallback>
                        </Avatar>
                        <p className="text-gray-600">
                          {profile.avatar ? '–ê–≤–∞—Ç–∞—Ä –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ' : '–ê–≤–∞—Ç–∞—Ä –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}
                        </p>
                      </div>
                    )}
                  </CardContent>
                </Card>

                {/* –î–æ–∫—É–º–µ–Ω—Ç–∏ */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Upload className="h-5 w-5 mr-2" />
                      –î–æ–∫—É–º–µ–Ω—Ç–∏
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    {editMode && (
                      <div className="mb-4">
                        <FileUpload
                          type="document"
                          onFileSelect={(file, url) => handleFileUpload('document', file, url)}
                          maxSize={10 * 1024 * 1024} // 10MB –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
                          preview={false}
                        />
                      </div>
                    )}

                    {profile.documents.length === 0 ? (
                      <p className="text-gray-500 text-center py-8">
                        –î–æ–∫—É–º–µ–Ω—Ç–∏ —â–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
                      </p>
                    ) : (
                      <div className="space-y-3">
                        {profile.documents.map((doc, index) => (
                          <div key={index} className="border rounded-lg p-4 bg-gray-50">
                            <div className="flex items-center space-x-3">
                              <div className="p-2 bg-blue-100 rounded">
                                <Upload className="h-6 w-6 text-blue-600" />
                              </div>
                              <div className="flex-1">
                                <p className="font-medium truncate">{doc.name}</p>
                                <p className="text-sm text-gray-500">{doc.type}</p>
                              </div>
                              <Button
                                size="sm"
                                variant="outline"
                                onClick={() => window.open(doc.url, '_blank')}
                              >
                                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                              </Button>
                            </div>
                          </div>
                        ))}
                      </div>
                    )}
                  </CardContent>
                </Card>
              </div>
            </TabsContent>

            {/* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
            <TabsContent value="settings" className="space-y-6">
              <div className="grid md:grid-cols-2 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Settings className="h-5 w-5 mr-2" />
                      –ü—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <Label>–ü—É–±–ª—ñ—á–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å</Label>
                        <p className="text-sm text-gray-500">–î–æ–∑–≤–æ–ª–∏—Ç–∏ —ñ–Ω—à–∏–º –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å</p>
                      </div>
                      <input
                        type="checkbox"
                        checked={profile.isPublicProfile}
                        onChange={(e) => handleInputChange('isPublicProfile', e.target.checked)}
                        disabled={!editMode}
                        className="rounded"
                      />
                    </div>

                    <div className="flex items-center justify-between">
                      <div>
                        <Label>–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ email</Label>
                        <p className="text-sm text-gray-500">Email –±—É–¥–µ –≤–∏–¥–∏–º–∏–π —É –ø—Ä–æ—Ñ—ñ–ª—ñ</p>
                      </div>
                      <input
                        type="checkbox"
                        checked={profile.showEmail}
                        onChange={(e) => handleInputChange('showEmail', e.target.checked)}
                        disabled={!editMode}
                        className="rounded"
                      />
                    </div>

                    <div className="flex items-center justify-between">
                      <div>
                        <Label>–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω</Label>
                        <p className="text-sm text-gray-500">–¢–µ–ª–µ—Ñ–æ–Ω –±—É–¥–µ –≤–∏–¥–∏–º–∏–π —É –ø—Ä–æ—Ñ—ñ–ª—ñ</p>
                      </div>
                      <input
                        type="checkbox"
                        checked={profile.showPhone}
                        onChange={(e) => handleInputChange('showPhone', e.target.checked)}
                        disabled={!editMode}
                        className="rounded"
                      />
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Mail className="h-5 w-5 mr-2" />
                      –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <Label>Email —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</Label>
                        <p className="text-sm text-gray-500">–û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ email</p>
                      </div>
                      <input
                        type="checkbox"
                        checked={profile.emailNotifications}
                        onChange={(e) => handleInputChange('emailNotifications', e.target.checked)}
                        disabled={!editMode}
                        className="rounded"
                      />
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>

            {/* –ë–µ–∑–ø–µ–∫–∞ */}
            <TabsContent value="security" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center">
                    <Lock className="h-5 w-5 mr-2" />
                    –ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div>
                    <Label>–ü–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å</Label>
                    <div className="relative">
                      <Input
                        type={showPasswords.current ? "text" : "password"}
                        value={passwordData.currentPassword}
                        onChange={(e) => setPasswordData(prev => ({ ...prev, currentPassword: e.target.value }))}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å"
                      />
                      <Button
                        type="button"
                        variant="ghost"
                        size="sm"
                        className="absolute right-2 top-1/2 -translate-y-1/2"
                        onClick={() => setShowPasswords(prev => ({ ...prev, current: !prev.current }))}
                      >
                        {showPasswords.current ? <EyeOff className="h-4 w-4" /> : <Eye className="h-4 w-4" />}
                      </Button>
                    </div>
                  </div>

                  <div>
                    <Label>–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å</Label>
                    <div className="relative">
                      <Input
                        type={showPasswords.new ? "text" : "password"}
                        value={passwordData.newPassword}
                        onChange={(e) => setPasswordData(prev => ({ ...prev, newPassword: e.target.value }))}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å"
                      />
                      <Button
                        type="button"
                        variant="ghost"
                        size="sm"
                        className="absolute right-2 top-1/2 -translate-y-1/2"
                        onClick={() => setShowPasswords(prev => ({ ...prev, new: !prev.new }))}
                      >
                        {showPasswords.new ? <EyeOff className="h-4 w-4" /> : <Eye className="h-4 w-4" />}
                      </Button>
                    </div>
                  </div>

                  <div>
                    <Label>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è</Label>
                    <div className="relative">
                      <Input
                        type={showPasswords.confirm ? "text" : "password"}
                        value={passwordData.confirmPassword}
                        onChange={(e) => setPasswordData(prev => ({ ...prev, confirmPassword: e.target.value }))}
                        placeholder="–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å"
                      />
                      <Button
                        type="button"
                        variant="ghost"
                        size="sm"
                        className="absolute right-2 top-1/2 -translate-y-1/2"
                        onClick={() => setShowPasswords(prev => ({ ...prev, confirm: !prev.confirm }))}
                      >
                        {showPasswords.confirm ? <EyeOff className="h-4 w-4" /> : <Eye className="h-4 w-4" />}
                      </Button>
                    </div>
                  </div>

                  <Button
                    onClick={handlePasswordChange}
                    className="w-full"
                    disabled={!passwordData.currentPassword || !passwordData.newPassword || !passwordData.confirmPassword}
                  >
                    –ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å
                  </Button>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∞–∫–∞—É–Ω—Ç</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3 text-sm">
                    <div className="flex justify-between">
                      <span className="text-gray-600">–î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:</span>
                      <span>{new Date(profile.memberSince).toLocaleDateString('uk-UA')}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">–û—Å—Ç–∞–Ω–Ω—ñ–π –≤—Ö—ñ–¥:</span>
                      <span>{user.lastLogin ? new Date(user.lastLogin).toLocaleDateString('uk-UA') : '–ù–µ–≤—ñ–¥–æ–º–æ'}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">–°—Ç–∞—Ç—É—Å email:</span>
                      <Badge variant="outline" className="bg-green-50 text-green-700">
                        {user.emailVerified ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' : '–ù–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ'}
                      </Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </div>
  );
}
