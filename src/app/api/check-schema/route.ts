import { NextResponse } from 'next/server';
import { executeQuery } from '@/lib/mysql';

export async function GET() {
  try {
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ö–µ–º–∏ MySQL...');

    // –ü–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ
    const tables = await executeQuery('SHOW TABLES');
    console.log('üìä –¢–∞–±–ª–∏—Ü—ñ –≤ –ë–î:', tables);

    // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ñ clubs —è–∫—â–æ –≤–æ–Ω–∞ —î
    const clubsTableExists = tables.some((row: any) =>
      Object.values(row).includes('clubs')
    );

    let clubsStructure = null;
    if (clubsTableExists) {
      clubsStructure = await executeQuery('DESCRIBE clubs');
      console.log('üè¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ñ clubs:', clubsStructure);
    } else {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü—è clubs –Ω–µ —ñ—Å–Ω—É—î');
    }

    // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ñ users
    const usersTableExists = tables.some((row: any) =>
      Object.values(row).includes('users')
    );

    let usersStructure = null;
    if (usersTableExists) {
      usersStructure = await executeQuery('DESCRIBE users');
      console.log('üë• –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ñ users:', usersStructure);
    } else {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü—è users –Ω–µ —ñ—Å–Ω—É—î');
    }

    return NextResponse.json({
      success: true,
      tables: tables,
      clubsTable: {
        exists: clubsTableExists,
        structure: clubsStructure
      },
      usersTable: {
        exists: usersTableExists,
        structure: usersStructure
      }
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ö–µ–º–∏:', error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
    }, { status: 500 });
  }
}
