import { type NextRequest, NextResponse } from 'next/server';
import { getApiSession } from '@/lib/auth';
// authOptions removed

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—É —Å–∞–º—É —Å–∏–º—É–ª—è—Ü—ñ—é –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
const subscriptions = new Map<string, any>();

export async function POST(request: NextRequest) {
  try {
    const session = await getApiSession(request);

    if (!session?.user?.email) {
      return NextResponse.json({
        success: false,
        error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π'
      }, { status: 401 });
    }

    const { email } = await request.json();

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è email
    if (!email || email !== session.user.email) {
      return NextResponse.json({
        success: false,
        error: '–ù–µ–≤—ñ—Ä–Ω–∏–π email'
      }, { status: 400 });
    }

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏
    const wasSubscribed = subscriptions.has(email);
    subscriptions.delete(email);

    console.log('üìß –í—ñ–¥–ø–∏—Å–∫–∞ –≤—ñ–¥ —Å–ø–æ–≤—ñ—â–µ–Ω—å:', {
      email,
      wasSubscribed,
      timestamp: new Date().toISOString()
    });

    // –í —Ä–µ–∞–ª—å–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ —Ç—É—Ç –±–∏ –±—É–ª–æ:
    // 1. –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    // 2. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ email –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥–ø–∏—Å–∫–∏
    // 3. –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏

    return NextResponse.json({
      success: true,
      message: wasSubscribed ? '–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø–∏—Å–∞–ª–∏—Å—å –≤—ñ–¥ —Å–ø–æ–≤—ñ—â–µ–Ω—å' : '–í–∏ –Ω–µ –±—É–ª–∏ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ',
      wasSubscribed
    });

  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø–∏—Å–∫–∏ –≤—ñ–¥ —Å–ø–æ–≤—ñ—â–µ–Ω—å:', error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    }, { status: 500 });
  }
}
