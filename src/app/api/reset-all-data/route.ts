import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    console.log('üóëÔ∏è –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö —Å–∏—Å—Ç–µ–º–∏ –§–£–°–ê–§');

    // –°–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–ª—é—á—ñ–≤ localStorage –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è
    const keysToClean = [
      'approvedClubs',
      'approvedAthletes',
      'approvedCoachesJudges',
      'approvedCompetitions',
      'clubRequests',
      'coachApplications', // –Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ –¥–æ –∫–ª—É–±—ñ–≤
      'clubTrainers', // —Å—Ö–≤–∞–ª–µ–Ω—ñ —Ç—Ä–µ–Ω–µ—Ä–∏ –ø–æ –∫–ª—É–±–∞—Ö
      'simple-auth-user' // –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    ];

    return NextResponse.json({
      success: true,
      message: '–í—Å—ñ –¥–∞–Ω—ñ —Å–∏—Å—Ç–µ–º–∏ –æ—á–∏—â–µ–Ω–æ. –õ—ñ—á–∏–ª—å–Ω–∏–∫–∏ –æ–±–Ω—É–ª–µ–Ω–æ.',
      keysToClean: keysToClean,
      instructions: '–ù–∞ –∫–ª—ñ—î–Ω—Ç—ñ –≤–∏–∫–æ–Ω–∞–π—Ç–µ: ' + keysToClean.filter(k => k !== 'simple-auth-user').map(k => `localStorage.removeItem('${k}')`).join('; ')
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö:', error);

    return NextResponse.json({
      success: false,
      error: '–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö'
    }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({
    message: 'API –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö —Å–∏—Å—Ç–µ–º–∏ –§–£–°–ê–§. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ POST –∑–∞–ø–∏—Ç.'
  });
}
