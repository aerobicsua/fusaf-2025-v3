import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const { email } = await request.json();

    if (!email) {
      return NextResponse.json({
        success: false,
        error: 'Email –Ω–µ –≤–∫–∞–∑–∞–Ω–æ'
      }, { status: 400 });
    }

    console.log(`üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ email: ${email}`);

    // –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage (–≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ)
    // –¢—É—Ç –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —É—Å–ø—ñ—Ö, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ

    return NextResponse.json({
      success: true,
      message: `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ email ${email} –≤–∏–¥–∞–ª–µ–Ω–æ –∑ —Å–∏—Å—Ç–µ–º–∏`
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);

    return NextResponse.json({
      success: false,
      error: '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'
    }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({
    message: 'API –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ POST –∑–∞–ø–∏—Ç –∑ email.'
  });
}
