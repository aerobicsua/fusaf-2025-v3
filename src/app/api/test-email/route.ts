import { NextRequest, NextResponse } from 'next/server';
import { EmailService } from '@/lib/email';

export async function POST(request: NextRequest) {
  try {
    const { to, type, data = {} } = await request.json();

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!to) {
      return NextResponse.json({
        success: false,
        error: 'Email –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –æ–±–æ–≤\'—è–∑–∫–æ–≤–∏–π'
      }, { status: 400 });
    }

    if (!type) {
      return NextResponse.json({
        success: false,
        error: '–¢–∏–ø email –æ–±–æ–≤\'—è–∑–∫–æ–≤–∏–π'
      }, { status: 400 });
    }

    console.log('üìß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è email —Å–µ—Ä–≤—ñ—Å—É:', { to, type });

    // –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –∑–∞ —Ç–∏–ø–æ–º
    let testData = {};

    switch (type) {
      case 'welcome':
        testData = {
          name: data.name || '–¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
          email: to,
          role: data.role || 'athlete',
          registrationDate: new Date().toISOString()
        };
        break;

      case 'club_registration':
        testData = {
          name: data.name || '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤–∏—á –°–∏–¥–æ—Ä–µ–Ω–∫–æ',
          email: to,
          clubName: data.clubName || '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–± "–ü–µ—Ä–µ–º–æ–≥–∞"',
          clubType: data.clubType || 'club',
          password: data.password || 'testpass123',
          registrationDate: new Date().toISOString()
        };
        break;

      case 'admin_notification':
        testData = {
          clubOwnerName: data.name || '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤–∏—á –°–∏–¥–æ—Ä–µ–Ω–∫–æ',
          clubName: data.clubName || '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–± "–ü–µ—Ä–µ–º–æ–≥–∞"',
          clubType: data.clubType || 'club',
          email: data.email || 'test@example.com',
          phone: data.phone || '+380501234567',
          registrationDate: new Date().toISOString()
        };
        break;

      case 'approval':
        testData = {
          name: data.name || '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤–∏—á –°–∏–¥–æ—Ä–µ–Ω–∫–æ',
          email: to,
          clubName: data.clubName || '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–± "–ü–µ—Ä–µ–º–æ–≥–∞"',
          loginUrl: 'https://fusaf.org.ua/login',
          approved: true
        };
        break;

      case 'rejection':
        testData = {
          name: data.name || '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤–∏—á –°–∏–¥–æ—Ä–µ–Ω–∫–æ',
          email: to,
          clubName: data.clubName || '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–± "–ü–µ—Ä–µ–º–æ–≥–∞"',
          reason: data.reason || '–ù–µ–ø–æ–≤–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏',
          approved: false
        };
        break;

      default:
        return NextResponse.json({
          success: false,
          error: '–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø email'
        }, { status: 400 });
    }

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π email
    const result = await EmailService.sendEmail({
      to,
      type,
      data: testData
    });

    if (result.success) {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
      return NextResponse.json({
        success: true,
        message: '–¢–µ—Å—Ç–æ–≤–∏–π email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ',
        type,
        to
      });
    } else {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email:', result.error);
      return NextResponse.json({
        success: false,
        error: result.error || '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email'
      }, { status: 500 });
    }

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ API —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è email:', error);
    return NextResponse.json({
      success: false,
      error: '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    }, { status: 500 });
  }
}

// GET –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–∏–ø—ñ–≤ email
export async function GET() {
  return NextResponse.json({
    availableTypes: [
      'welcome',
      'club_registration',
      'admin_notification',
      'approval',
      'rejection'
    ],
    description: '–î–æ—Å—Ç—É–ø–Ω—ñ —Ç–∏–ø–∏ email –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è',
    example: {
      method: 'POST',
      body: {
        to: 'test@example.com',
        type: 'welcome',
        data: {
          name: '–¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
          role: 'athlete'
        }
      }
    }
  });
}
