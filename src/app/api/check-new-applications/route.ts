import { NextRequest, NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

export async function POST(request: NextRequest) {
  try {
    const { userEmail, clubsData, applicationsData } = await request.json();

    console.log(`üîî –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${userEmail}`);

    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ –∑–∞–ø–∏—Ç—É (–ø–µ—Ä–µ–¥–∞–Ω—ñ –∑ –∫–ª—ñ—î–Ω—Ç–∞)
    const approvedClubs = clubsData || [];
    const userClubs = approvedClubs.filter((club: any) =>
      club.owner?.email === userEmail
    );

    if (userClubs.length === 0) {
      return NextResponse.json({
        success: true,
        newApplications: 0,
        notifications: []
      });
    }

    // –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞—è–≤–∫–∏ –∑ –∑–∞–ø–∏—Ç—É
    const allApplications = applicationsData || [];

    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞—è–≤–∫–∏ –¥–ª—è –∫–ª—É–±—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userClubApplications = allApplications.filter((app: any) =>
      userClubs.some((club: any) => club.id === app.preferredClub.id)
    );

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏ (–∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏)
    const oneDayAgo = new Date();
    oneDayAgo.setDate(oneDayAgo.getDate() - 1);

    const newApplications = userClubApplications.filter((app: any) => {
      const submittedDate = new Date(app.submittedAt);
      return submittedDate >= oneDayAgo && app.status === 'pending';
    });

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥—ñ
    const pendingApplications = userClubApplications.filter((app: any) =>
      app.status === 'pending'
    );

    // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø–æ–≤—ñ—â–µ–Ω—å
    const notifications = newApplications.map((app: any) => {
      const club = userClubs.find((club: any) => club.id === app.preferredClub.id);
      return {
        id: app.id,
        applicantName: app.name,
        clubName: club?.name,
        submittedAt: app.submittedAt,
        roles: app.roles,
        message: app.applicationMessage
      };
    });

    // –Ø–∫—â–æ —î –Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏ —ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–ª–∞—à—Ç—É–≤–∞–≤ email —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    if (newApplications.length > 0) {
      try {
        await sendNotificationEmail(userEmail, newApplications, userClubs);
        console.log('‚úÖ Email —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ');
      } catch (emailError) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è email —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', emailError);
      }
    }

    return NextResponse.json({
      success: true,
      newApplications: newApplications.length,
      pendingApplications: pendingApplications.length,
      totalApplications: userClubApplications.length,
      notifications,
      summary: {
        totalClubs: userClubs.length,
        clubNames: userClubs.map((club: any) => club.name)
      }
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫:', error);

    return NextResponse.json({
      success: false,
      error: '–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞—è–≤–æ–∫'
    }, { status: 500 });
  }
}

async function sendNotificationEmail(userEmail: string, newApplications: any[], userClubs: any[]) {
  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER || 'aerobicsua@gmail.com',
      pass: process.env.EMAIL_PASSWORD || 'demo_password'
    }
  });

  const clubsWithApps = newApplications.reduce((acc: any, app: any) => {
    const clubName = app.preferredClub.name;
    if (!acc[clubName]) {
      acc[clubName] = [];
    }
    acc[clubName].push(app);
    return acc;
  }, {});

  const htmlContent = `
  <!DOCTYPE html>
  <html>
  <head>
    <meta charset="utf-8">
    <title>–ù–æ–≤—ñ –∑–∞—è–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ - –§–£–°–ê–§</title>
  </head>
  <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
      <div style="text-align: center; margin-bottom: 30px;">
        <h1 style="color: #007bff;">üîî –ù–æ–≤—ñ –∑–∞—è–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤!</h1>
      </div>

      <div style="background: #e7f3ff; padding: 25px; border-radius: 8px; margin-bottom: 25px;">
        <h2 style="color: #0056b3; margin-top: 0;">–®–∞–Ω–æ–≤–Ω–∏–π –∫–µ—Ä—ñ–≤–Ω–∏–∫ –∫–ª—É–±—É!</h2>

        <p>–£ –≤–∞—Å —î <strong>${newApplications.length}</strong> ${newApplications.length === 1 ? '–Ω–æ–≤–∞ –∑–∞—è–≤–∫–∞' : '–Ω–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫'} –≤—ñ–¥ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤/—Å—É–¥–¥—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –≤–∞—à–æ–≥–æ —Ä–æ–∑–≥–ª—è–¥—É.</p>

        ${Object.entries(clubsWithApps).map(([clubName, apps]: [string, any]) => `
          <div style="background: white; padding: 15px; border-radius: 6px; margin: 15px 0; border-left: 4px solid #007bff;">
            <h3 style="margin-top: 0; color: #007bff;">üè¢ ${clubName}</h3>
            ${(apps as any[]).map(app => `
              <div style="margin-bottom: 10px; padding: 10px; background: #f8f9fa; border-radius: 4px;">
                <p style="margin: 0;"><strong>üë§ ${app.name}</strong></p>
                <p style="margin: 5px 0; color: #666; font-size: 14px;">
                  –†–æ–ª—ñ: ${app.roles.map((role: string) => role === 'coach' ? '–¢—Ä–µ–Ω–µ—Ä' : '–°—É–¥–¥—è').join(', ')}
                </p>
                <p style="margin: 5px 0; color: #666; font-size: 14px;">
                  –ü–æ–¥–∞–Ω–æ: ${new Date(app.submittedAt).toLocaleDateString('uk-UA')} ${new Date(app.submittedAt).toLocaleTimeString('uk-UA')}
                </p>
                ${app.applicationMessage ? `
                  <p style="margin: 5px 0; font-style: italic; color: #666; font-size: 14px;">
                    "${app.applicationMessage}"
                  </p>
                ` : ''}
              </div>
            `).join('')}
          </div>
        `).join('')}
      </div>

      <div style="background: #d4edda; padding: 20px; border-radius: 8px; margin-bottom: 25px;">
        <h3 style="color: #155724; margin-top: 0;">üéØ –©–æ —Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:</h3>
        <ul style="color: #155724;">
          <li>–ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –¥–∞—à–±–æ—Ä–¥—É –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ –∫–ª—É–±—É</li>
          <li>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–∂–Ω–æ–≥–æ –∑–∞—è–≤–Ω–∏–∫–∞</li>
          <li>–ü—Ä–∏–π–º—ñ—Ç—å —Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è</li>
          <li>–î–æ–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞</li>
        </ul>

        <div style="text-align: center; margin-top: 20px;">
          <a href="https://fusaf.org.ua/club-manager/trainer-applications"
             style="background: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
            üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞—è–≤–∫–∏
          </a>
        </div>
      </div>

      <div style="text-align: center; padding: 20px; background: #1f2937; color: white; border-radius: 8px;">
        <h3 style="margin-top: 0;">–§–µ–¥–µ—Ä–∞—Ü—ñ—è –£–∫—Ä–∞—ó–Ω–∏ –∑—ñ –°–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –ê–µ—Ä–æ–±—ñ–∫–∏ —ñ –§—ñ—Ç–Ω–µ—Å—É</h3>
        <p>üìß Email: info@fusaf.org.ua</p>
        <p>üåê –°–∞–π—Ç: <a href="https://fusaf.org.ua" style="color: #60a5fa;">fusaf.org.ua</a></p>
      </div>

      <p style="text-align: center; color: #6b7280; font-size: 14px; margin-top: 20px;">
        ¬© 2024 –§–£–°–ê–§. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è.
      </p>
    </div>
  </body>
  </html>`;

  const textContent = `
üîî –ù–æ–≤—ñ –∑–∞—è–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤!

–®–∞–Ω–æ–≤–Ω–∏–π –∫–µ—Ä—ñ–≤–Ω–∏–∫ –∫–ª—É–±—É!

–£ –≤–∞—Å —î ${newApplications.length} ${newApplications.length === 1 ? '–Ω–æ–≤–∞ –∑–∞—è–≤–∫–∞' : '–Ω–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫'} –≤—ñ–¥ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤/—Å—É–¥–¥—ñ–≤.

${Object.entries(clubsWithApps).map(([clubName, apps]: [string, any]) => `
üè¢ ${clubName}:
${(apps as any[]).map(app => `
  ‚Ä¢ ${app.name} (${app.roles.map((role: string) => role === 'coach' ? '–¢—Ä–µ–Ω–µ—Ä' : '–°—É–¥–¥—è').join(', ')})
    –ü–æ–¥–∞–Ω–æ: ${new Date(app.submittedAt).toLocaleDateString('uk-UA')}
    ${app.applicationMessage ? `–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "${app.applicationMessage}"` : ''}
`).join('')}
`).join('')}

–ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –¥–∞—à–±–æ—Ä–¥—É –¥–ª—è —Ä–æ–∑–≥–ª—è–¥—É –∑–∞—è–≤–æ–∫: https://fusaf.org.ua/club-manager/trainer-applications

–§–£–°–ê–§ - –§–µ–¥–µ—Ä–∞—Ü—ñ—è –£–∫—Ä–∞—ó–Ω–∏ –∑—ñ –°–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –ê–µ—Ä–æ–±—ñ–∫–∏ —ñ –§—ñ—Ç–Ω–µ—Å—É
`;

  const mailOptions = {
    from: `"–§–£–°–ê–§" <${process.env.EMAIL_USER || 'aerobicsua@gmail.com'}>`,
    to: userEmail,
    subject: `üîî –ù–æ–≤—ñ –∑–∞—è–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ (${newApplications.length}) - –§–£–°–ê–§`,
    text: textContent,
    html: htmlContent
  };

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ —Ä–µ–∞–ª—å–Ω—ñ email credentials
  const hasRealCredentials = process.env.EMAIL_PASSWORD &&
                            process.env.EMAIL_PASSWORD !== 'demo_password' &&
                            process.env.EMAIL_USER &&
                            process.env.EMAIL_USER !== 'aerobicsua@gmail.com';

  if (hasRealCredentials) {
    await transporter.sendMail(mailOptions);
  } else {
    console.log('üìß –î–ï–ú–û —Ä–µ–∂–∏–º - —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏ (–±—É–ª–æ –± –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞):', userEmail);
    console.log('üìß –ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫:', newApplications.length);
  }
}

export async function GET() {
  return NextResponse.json({
    message: 'API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ POST –∑–∞–ø–∏—Ç –∑ userEmail.'
  });
}
