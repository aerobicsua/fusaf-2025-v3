"use client";

import { useState, useEffect } from 'react';
import { useSimpleAuth } from '@/components/SimpleAuthProvider';
import Link from 'next/link';
import { canRegisterTeams, canRegisterIndividual } from '@/lib/auth';
import { Header } from '@/components/Header';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { PreliminaryRegistration } from '@/components/PreliminaryRegistration';
import { IndividualRegistration } from '@/components/IndividualRegistration';
import { NotificationSubscription } from '@/components/NotificationSubscription';
import { ExportParticipants } from '@/components/ExportParticipants';
import {
  Calendar,
  MapPin,
  Clock,
  Users,
  DollarSign,
  Trophy,
  UserPlus,
  FileText,
  Plus,
  Filter,
  AlertCircle,
  Phone,
  Mail,
  Globe,
  Award,
  Target,
  Info,
  Edit,
  Settings
} from 'lucide-react';



interface Competition {
  id: string;
  title: string;
  description: string;
  date: string;
  time: string;
  location: string;
  address: string;
  registration_fee: number;
  entry_fee: number;
  max_participants: number;
  registration_deadline: string;
  status: string;
  club: {
    name: string;
    city: string;
  };
  preliminary_registrations: Array<{ count: number }>;
  individual_registrations: Array<{ count: number }>;
  categories?: string[];
  rules?: string;
  contact_person?: {
    name: string;
    phone: string;
    email: string;
  };
  prizes?: string[];
  schedule?: {
    registration: string;
    warmup: string;
    competition: string;
    awards: string;
  };
}

// –û—á–∏—â–µ–Ω—ñ –¥–∞–Ω—ñ - –ø–æ—á–∏–Ω–∞—î–º–æ –∑ –Ω—É–ª—è
const demoCompetitions: Competition[] = [];

export default function CompetitionsPage() {
  const { user, loading } = useSimpleAuth();

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  console.log('üèÜ CompetitionsPage render:', {
    user: user?.email,
    roles: user?.roles,
    timestamp: new Date().toISOString()
  });

  const [competitions, setCompetitions] = useState<Competition[]>([]);
  const [competitionsLoading, setCompetitionsLoading] = useState(true);
  const [filter, setFilter] = useState('all');
  const [selectedCompetition, setSelectedCompetition] = useState<Competition | null>(null);
  const [registrationMode, setRegistrationMode] = useState<'preliminary' | 'individual' | null>(null);
  const [detailsDialogOpen, setDetailsDialogOpen] = useState(false);
  const [competitionDetails, setCompetitionDetails] = useState<Competition | null>(null);

  useEffect(() => {
    loadCompetitions();
  }, [filter]);

  const loadCompetitions = async () => {
    try {
      setCompetitionsLoading(true);

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º–∞–≥–∞–Ω–Ω—è –∑ –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ —Å–ø–∏—Å–∫—É (–ø–æ—á–∞—Ç–æ–∫ –∑ –Ω—É–ª—è)
      let filteredCompetitions = [...demoCompetitions];

      if (filter !== 'all') {
        filteredCompetitions = filteredCompetitions.filter(comp => comp.status === filter);
      }

      setCompetitions(filteredCompetitions);
      console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${filteredCompetitions.length} –∑–º–∞–≥–∞–Ω—å`);

    } catch (error) {
      console.error('Error loading competitions:', error);
      // –ó–∞–≤–∂–¥–∏ –ø–æ–∫–∞–∑—É—î–º–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
      setCompetitions(demoCompetitions);
    } finally {
      setCompetitionsLoading(false);
    }
  };

  const getStatusBadge = (status: string) => {
    const statusConfig = {
      draft: { label: '–ß–µ—Ä–Ω–µ—Ç–∫–∞', color: 'bg-gray-500' },
      published: { label: '–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ', color: 'bg-blue-500' },
      registration_open: { label: '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤—ñ–¥–∫—Ä–∏—Ç–∞', color: 'bg-green-500' },
      registration_closed: { label: '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç–∞', color: 'bg-yellow-500' },
      in_progress: { label: '–ü—Ä–æ—Ö–æ–¥–∏—Ç—å', color: 'bg-purple-500' },
      completed: { label: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ', color: 'bg-gray-600' },
      cancelled: { label: '–°–∫–∞—Å–æ–≤–∞–Ω–æ', color: 'bg-red-500' }
    };

    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.draft;
    return (
      <Badge className={`${config.color} text-white`}>
        {config.label}
      </Badge>
    );
  };

  const isRegistrationAvailable = (competition: Competition) => {
    return competition.status === 'registration_open' &&
           new Date() < new Date(competition.registration_deadline);
  };

  const canUserRegisterTeams = (competition: Competition) => {
    // –¢—ñ–ª—å–∫–∏ –≤–ª–∞—Å–Ω–∏–∫–∏ –∫–ª—É–±—ñ–≤, —Ç—Ä–µ–Ω–µ—Ä–∏ —Ç–∞ –∞–¥–º—ñ–Ω–∏ –º–æ–∂—É—Ç—å –ø–æ–¥–∞–≤–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
    return user && isRegistrationAvailable(competition) && canRegisterTeams(user?.roles);
  };

  const canUserRegisterIndividual = (competition: Competition) => {
    // –Ü–º–µ–Ω–Ω—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –º–æ–∂—É—Ç—å –ø–æ–¥–∞–≤–∞—Ç–∏ –≤—Å—ñ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
    return user && isRegistrationAvailable(competition) && canRegisterIndividual(user?.roles);
  };

  const canUserCreateCompetition = () => {
    // –¢—ñ–ª—å–∫–∏ –≤–ª–∞—Å–Ω–∏–∫–∏ –∫–ª—É–±—ñ–≤ —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∑–º–∞–≥–∞–Ω–Ω—è
    const hasPermission = user && user?.roles?.some(role => ['admin', 'club_owner'].includes(role));

    // –î–µ–±–∞–≥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    console.log('üîç Debug —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–º–∞–≥–∞–Ω–Ω—è:', {
      session: !!user,
      user: user?.email,
      roles: user?.roles,
      hasPermission
    });

    return hasPermission;
  };

  const getRegistrationStats = (competition: Competition) => {
    const preliminaryCount = competition.preliminary_registrations?.[0]?.count || 0;
    const individualCount = competition.individual_registrations?.[0]?.count || 0;
    return { preliminaryCount, individualCount };
  };

  const handleRegistrationSuccess = (registration: any) => {
    alert(`‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!\n\n–ù–æ–º–µ—Ä —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ${registration.registration_number || registration.id}`);
    setRegistrationMode(null);
    setSelectedCompetition(null);
    loadCompetitions(); // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –∑–º–∞–≥–∞–Ω—å
  };

  const handleRegistrationCancel = () => {
    setRegistrationMode(null);
    setSelectedCompetition(null);
  };

  const handleShowDetails = (competition: Competition) => {
    setCompetitionDetails(competition);
    setDetailsDialogOpen(true);
  };

  if (competitionsLoading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Header />
        <div className="container mx-auto px-4 py-8">
          <div className="flex items-center justify-center h-64">
            <div className="text-center">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
              <p className="text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º–∞–≥–∞–Ω—å...</p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />

      <div className="container mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∏ */}
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              üèÜ –ö–∞–ª–µ–Ω–¥–∞—Ä –∑–º–∞–≥–∞–Ω—å –§–£–°–ê–§
            </h1>
            <p className="text-gray-600">
              –û—Ñ—ñ—Ü—ñ–π–Ω—ñ –∑–º–∞–≥–∞–Ω–Ω—è –∑ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏ —Ç–∞ —Ñ—ñ—Ç–Ω–µ—Å—É –≤ –£–∫—Ä–∞—ó–Ω—ñ
            </p>
          </div>

          <div className="flex items-center space-x-4 mt-4 md:mt-0">
            {/* –§—ñ–ª—å—Ç—Ä–∏ */}
            <div className="flex items-center space-x-2">
              <Filter className="h-4 w-4 text-gray-500" />
              <select
                value={filter}
                onChange={(e) => setFilter(e.target.value)}
                className="border rounded-md px-3 py-2 text-sm"
              >
                <option value="all">–í—Å—ñ –∑–º–∞–≥–∞–Ω–Ω—è</option>
                <option value="registration_open">–í—ñ–¥–∫—Ä–∏—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</option>
                <option value="published">–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω—ñ</option>
                <option value="in_progress">–ü—Ä–æ—Ö–æ–¥—è—Ç—å</option>
                <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω—ñ</option>
              </select>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–º–∞–≥–∞–Ω—å - –ü–†–ê–¶–Æ–Ñ! */}
            {canUserCreateCompetition() && (
              <Link href="/competitions/create">
                <Button className="bg-blue-600 hover:bg-blue-700 text-white">
                  <Plus className="h-4 w-4 mr-2" />
                  –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–º–∞–≥–∞–Ω–Ω—è
                </Button>
              </Link>
            )}
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –∑–º–∞–≥–∞–Ω—å */}
        {competitions.length === 0 ? (
          <Card className="text-center py-12">
            <CardContent>
              <Trophy className="h-16 w-16 mx-auto text-gray-400 mb-4" />
              <h3 className="text-lg font-semibold mb-2">–ó–º–∞–≥–∞–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
              <p className="text-gray-600 mb-4">
                –ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ–º–∞—î –∑–º–∞–≥–∞–Ω—å –∑–∞ –æ–±—Ä–∞–Ω–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏
              </p>
              {canUserCreateCompetition() && (
                <Link href="/competitions/create">
                  <Button className="bg-blue-600 hover:bg-blue-700">
                    <Plus className="h-4 w-4 mr-2" />
                    –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—à–µ –∑–º–∞–≥–∞–Ω–Ω—è
                  </Button>
                </Link>
              )}
            </CardContent>
          </Card>
        ) : (
          <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
            {competitions.map((competition) => {
              const { preliminaryCount, individualCount } = getRegistrationStats(competition);
              const isAvailable = isRegistrationAvailable(competition);
              const userCanRegisterTeams = canUserRegisterTeams(competition);
              const userCanRegisterIndividual = canUserRegisterIndividual(competition);

              return (
                <Card key={competition.id} className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <div className="flex justify-between items-start mb-2">
                      <CardTitle className="text-lg leading-tight">
                        {competition.title}
                      </CardTitle>
                      {getStatusBadge(competition.status)}
                    </div>
                    <p className="text-sm text-gray-600 line-clamp-2">
                      {competition.description}
                    </p>
                  </CardHeader>

                  <CardContent className="space-y-4">
                    {/* –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                    <div className="space-y-2">
                      <div className="flex items-center text-sm text-gray-600">
                        <Calendar className="h-4 w-4 mr-2" />
                        {new Date(competition.date).toLocaleDateString('uk-UA')} –æ {competition.time}
                      </div>
                      <div className="flex items-center text-sm text-gray-600">
                        <MapPin className="h-4 w-4 mr-2" />
                        {competition.location}, {competition.club?.city}
                      </div>
                      <div className="flex items-center text-sm text-gray-600">
                        <Clock className="h-4 w-4 mr-2" />
                        –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –¥–æ: {new Date(competition.registration_deadline).toLocaleDateString('uk-UA')}
                      </div>
                    </div>

                    {/* –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                    <div className="bg-gray-50 p-3 rounded-lg">
                      <div className="flex items-center justify-between text-sm">
                        <span className="text-gray-600">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π –≤–Ω–µ—Å–æ–∫:</span>
                        <span className="font-semibold">{competition.registration_fee} –≥—Ä–Ω</span>
                      </div>
                      {competition.entry_fee > 0 && (
                        <div className="flex items-center justify-between text-sm">
                          <span className="text-gray-600">–í—Å—Ç—É–ø–Ω–∏–π –≤–Ω–µ—Å–æ–∫:</span>
                          <span className="font-semibold">{competition.entry_fee} –≥—Ä–Ω</span>
                        </div>
                      )}
                    </div>

                    {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ–π */}
                    <div className="grid grid-cols-2 gap-4 text-center">
                      <div className="bg-blue-50 p-2 rounded">
                        <div className="text-lg font-bold text-blue-600">{preliminaryCount}</div>
                        <div className="text-xs text-blue-600">–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ</div>
                      </div>
                      <div className="bg-green-50 p-2 rounded">
                        <div className="text-lg font-bold text-green-600">{individualCount}</div>
                        <div className="text-xs text-green-600">–Ü–º–µ–Ω–Ω—ñ</div>
                      </div>
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π */}
                    <div className="space-y-2">
                      {!isAvailable && (
                        <div className="flex items-center text-sm text-amber-600 bg-amber-50 p-2 rounded">
                          <AlertCircle className="h-4 w-4 mr-2" />
                          –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç–∞ –∞–±–æ –∑–º–∞–≥–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ
                        </div>
                      )}

                      {/* –ö–Ω–æ–ø–∫–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –¥–ª—è –≤–ª–∞—Å–Ω–∏–∫—ñ–≤ –∫–ª—É–±—ñ–≤, —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ —Ç–∞ –∞–¥–º—ñ–Ω—ñ–≤ */}
                      {userCanRegisterTeams && (
                        <div className="space-y-2">
                          <PreliminaryRegistration
                            competition={competition}
                            onRegistrationSuccess={handleRegistrationSuccess}
                          />
                        </div>
                      )}

                      {/* –Ü–º–µ–Ω–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤, –≤–ª–∞—Å–Ω–∏–∫—ñ–≤ –∫–ª—É–±—ñ–≤ —Ç–∞ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ */}
                      {userCanRegisterIndividual &&
                        user?.roles?.some(role => ['admin', 'club_owner', 'coach_judge'].includes(role)) && (
                        <div className="mt-2">
                          <Dialog>
                            <DialogTrigger asChild>
                              <Button
                                size="sm"
                                onClick={() => {
                                  setSelectedCompetition(competition);
                                  setRegistrationMode('individual');
                                }}
                                className="w-full"
                              >
                                <UserPlus className="h-4 w-4 mr-1" />
                                –Ü–º–µ–Ω–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
                              </Button>
                            </DialogTrigger>
                          </Dialog>
                        </div>
                      )}

                      {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —á–∏—Å—Ç–∏—Ö —Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ñ–≤ */}
                      {user?.roles?.length === 1 &&
                        user?.roles?.includes('athlete') &&
                        !canRegisterTeams(user?.roles) && (
                        <div className="bg-blue-50 p-3 rounded text-sm text-blue-700">
                          üí° –°–ø–æ—Ä—Ç—Å–º–µ–Ω–∏ –º–æ–∂—É—Ç—å –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –∑–º–∞–≥–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.
                          –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –ø–æ–¥–∞—é—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∏ –∞–±–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∏ –∫–ª—É–±—ñ–≤.
                        </div>
                      )}

                      {!user && isAvailable && (
                        <div className="text-center">
                          <p className="text-sm text-gray-600 mb-2">
                            –£–≤—ñ–π–¥—ñ—Ç—å –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –Ω–∞ –∑–º–∞–≥–∞–Ω–Ω—è
                          </p>
                          <Button size="sm" variant="outline">
                            –£–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                          </Button>
                        </div>
                      )}

                      {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤–ª–∞—Å–Ω–∏–∫—ñ–≤ –∫–ª—É–±—ñ–≤ —Ç–∞ –∞–¥–º—ñ–Ω—ñ–≤ */}
                      {user?.roles?.some(role => ['admin', 'club_owner'].includes(role)) && (
                        <Link href={`/competitions/${competition.id}/edit`}>
                          <Button
                            size="sm"
                            variant="outline"
                            className="w-full mb-2"
                          >
                            <Edit className="h-4 w-4 mr-1" />
                            –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                          </Button>
                        </Link>
                      )}

                      <Button
                        size="sm"
                        variant="ghost"
                        className="w-full"
                        onClick={() => handleShowDetails(competition)}
                      >
                        –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        )}

        {/* –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-8">
          {/* –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è */}
          <NotificationSubscription />

          {/* –ï–∫—Å–ø–æ—Ä—Ç —É—á–∞—Å–Ω–∏–∫—ñ–≤ - —Ç—ñ–ª—å–∫–∏ –¥–ª—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä—ñ–≤ */}
          {user?.roles?.some(role => ['admin', 'club_owner', 'coach_judge'].includes(role)) && (
            <ExportParticipants
              competitionId="comp-1"
              competitionTitle="–ö—É–±–æ–∫ –£–∫—Ä–∞—ó–Ω–∏ –∑—ñ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏ 2025"
            />
          )}
        </div>

        {/* –î—ñ–∞–ª–æ–≥ —ñ–º–µ–Ω–Ω–æ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó */}
        {selectedCompetition && registrationMode === 'individual' && (
          <Dialog open={true} onOpenChange={() => handleRegistrationCancel()}>
            <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
              <DialogHeader>
                <DialogTitle>–Ü–º–µ–Ω–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</DialogTitle>
                <DialogDescription>
                  –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—á–∞—Å–Ω–∏–∫–∞ –Ω–∞ –∑–º–∞–≥–∞–Ω–Ω—è
                </DialogDescription>
              </DialogHeader>
              <IndividualRegistration
                competitionId={selectedCompetition.id}
                competitionTitle={selectedCompetition.title}
                competitionDate={selectedCompetition.date}
                registrationFee={selectedCompetition.registration_fee}
                entryFee={selectedCompetition.entry_fee}
                onSuccess={handleRegistrationSuccess}
                onCancel={handleRegistrationCancel}
              />
            </DialogContent>
          </Dialog>
        )}

        {/* –î—ñ–∞–ª–æ–≥ –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó */}
        <Dialog open={detailsDialogOpen} onOpenChange={setDetailsDialogOpen}>
          <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
            <DialogHeader>
              <DialogTitle className="flex items-center text-xl">
                <Info className="h-6 w-6 text-blue-600 mr-2" />
                –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–º–∞–≥–∞–Ω–Ω—è
              </DialogTitle>
              <DialogDescription>
                –ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {competitionDetails?.title}
              </DialogDescription>
            </DialogHeader>

            {competitionDetails && (
              <div className="space-y-6">
                {/* –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Trophy className="h-5 w-5 mr-2 text-blue-600" />
                      {competitionDetails.title}
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <p className="text-gray-700">{competitionDetails.description}</p>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="flex items-center text-gray-600">
                        <Calendar className="h-4 w-4 mr-2" />
                        <span>{new Date(competitionDetails.date).toLocaleDateString('uk-UA')} –æ {competitionDetails.time}</span>
                      </div>
                      <div className="flex items-center text-gray-600">
                        <MapPin className="h-4 w-4 mr-2" />
                        <span>{competitionDetails.location}</span>
                      </div>
                      <div className="flex items-center text-gray-600">
                        <Users className="h-4 w-4 mr-2" />
                        <span>–ú–∞–∫—Å–∏–º—É–º {competitionDetails.max_participants} —É—á–∞—Å–Ω–∏–∫—ñ–≤</span>
                      </div>
                      <div className="flex items-center text-gray-600">
                        <Clock className="h-4 w-4 mr-2" />
                        <span>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –¥–æ: {new Date(competitionDetails.registration_deadline).toLocaleDateString('uk-UA')}</span>
                      </div>
                    </div>

                    <div className="bg-gray-50 p-4 rounded-lg">
                      <h4 className="font-semibold mb-2">üìç –ê–¥—Ä–µ—Å–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è:</h4>
                      <p className="text-gray-700">{competitionDetails.address}</p>
                    </div>
                  </CardContent>
                </Card>

                {/* –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <DollarSign className="h-5 w-5 mr-2 text-green-600" />
                      –í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="bg-blue-50 p-4 rounded-lg text-center">
                        <div className="text-2xl font-bold text-blue-600">{competitionDetails.registration_fee} –≥—Ä–Ω</div>
                        <div className="text-sm text-blue-600">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π –≤–Ω–µ—Å–æ–∫</div>
                      </div>
                      {competitionDetails.entry_fee > 0 && (
                        <div className="bg-green-50 p-4 rounded-lg text-center">
                          <div className="text-2xl font-bold text-green-600">{competitionDetails.entry_fee} –≥—Ä–Ω</div>
                          <div className="text-sm text-green-600">–í—Å—Ç—É–ø–Ω–∏–π –≤–Ω–µ—Å–æ–∫</div>
                        </div>
                      )}
                    </div>
                  </CardContent>
                </Card>

                {/* –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó */}
                {competitionDetails.categories && (
                  <Card>
                    <CardHeader>
                      <CardTitle className="flex items-center">
                        <Target className="h-5 w-5 mr-2 text-purple-600" />
                        –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–º–∞–≥–∞–Ω—å
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                        {competitionDetails.categories.map((category, index) => (
                          <Badge key={index} variant="outline" className="justify-start p-2">
                            {category}
                          </Badge>
                        ))}
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* –†–æ–∑–∫–ª–∞–¥ –∑–º–∞–≥–∞–Ω—å */}
                {competitionDetails.schedule && (
                  <Card>
                    <CardHeader>
                      <CardTitle className="flex items-center">
                        <Clock className="h-5 w-5 mr-2 text-orange-600" />
                        –†–æ–∑–∫–ª–∞–¥ –¥–Ω—è –∑–º–∞–≥–∞–Ω—å
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-3">
                        <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
                          <span className="font-medium">üìù –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—á–∞—Å–Ω–∏–∫—ñ–≤</span>
                          <span className="text-gray-600">{competitionDetails.schedule.registration}</span>
                        </div>
                        <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
                          <span className="font-medium">üèÉ‚Äç‚ôÄÔ∏è –†–æ–∑–º–∏–Ω–∫–∞</span>
                          <span className="text-gray-600">{competitionDetails.schedule.warmup}</span>
                        </div>
                        <div className="flex justify-between items-center p-3 bg-blue-50 rounded">
                          <span className="font-medium">üèÜ –ó–º–∞–≥–∞–Ω–Ω—è</span>
                          <span className="text-blue-600 font-semibold">{competitionDetails.schedule.competition}</span>
                        </div>
                        <div className="flex justify-between items-center p-3 bg-yellow-50 rounded">
                          <span className="font-medium">ü•á –ù–∞–≥–æ—Ä–æ–¥–∂–µ–Ω–Ω—è</span>
                          <span className="text-yellow-600 font-semibold">{competitionDetails.schedule.awards}</span>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* –ü—Ä–∏–∑–∏ */}
                {competitionDetails.prizes && (
                  <Card>
                    <CardHeader>
                      <CardTitle className="flex items-center">
                        <Award className="h-5 w-5 mr-2 text-yellow-600" />
                        –ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-2">
                        {competitionDetails.prizes.map((prize, index) => (
                          <div key={index} className="flex items-center p-2 bg-yellow-50 rounded">
                            <span className="text-yellow-600 mr-2">üèÜ</span>
                            <span>{prize}</span>
                          </div>
                        ))}
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* –ü—Ä–∞–≤–∏–ª–∞ */}
                {competitionDetails.rules && (
                  <Card>
                    <CardHeader>
                      <CardTitle className="flex items-center">
                        <FileText className="h-5 w-5 mr-2 text-gray-600" />
                        –ü—Ä–∞–≤–∏–ª–∞ —Ç–∞ –≤–∏–º–æ–≥–∏
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <p className="text-gray-700 leading-relaxed">{competitionDetails.rules}</p>
                    </CardContent>
                  </Card>
                )}

                {/* –î–æ–∫—É–º–µ–Ω—Ç–∏ –∑–º–∞–≥–∞–Ω–Ω—è */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <FileText className="h-5 w-5 mr-2 text-blue-600" />
                      –î–æ–∫—É–º–µ–Ω—Ç–∏ –∑–º–∞–≥–∞–Ω–Ω—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      {/* –†–µ–≥–ª–∞–º–µ–Ω—Ç */}
                      <div className="flex items-center justify-between p-3 bg-blue-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <FileText className="h-8 w-8 text-blue-600" />
                          <div>
                            <p className="font-medium text-blue-900">–†–µ–≥–ª–∞–º–µ–Ω—Ç –∑–º–∞–≥–∞–Ω—å</p>
                            <p className="text-sm text-blue-600">–û—Ñ—ñ—Ü—ñ–π–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è</p>
                          </div>
                        </div>
                        <Button
                          size="sm"
                          onClick={() => {
                            // –°–∏–º—É–ª—è—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É
                            const link = document.createElement('a');
                            link.href = '/demo-regulation.pdf';
                            link.download = `–†–µ–≥–ª–∞–º–µ–Ω—Ç_${competitionDetails?.title}.pdf`;
                            link.click();
                          }}
                          className="bg-blue-600 hover:bg-blue-700"
                        >
                          üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
                        </Button>
                      </div>

                      {/* –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è */}
                      <div className="flex items-center justify-between p-3 bg-green-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <FileText className="h-8 w-8 text-green-600" />
                          <div>
                            <p className="font-medium text-green-900">–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è –Ω–∞ –∑–º–∞–≥–∞–Ω–Ω—è</p>
                            <p className="text-sm text-green-600">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è —É—á–∞—Å–Ω–∏–∫—ñ–≤</p>
                          </div>
                        </div>
                        <Button
                          size="sm"
                          onClick={() => {
                            // –°–∏–º—É–ª—è—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É
                            const link = document.createElement('a');
                            link.href = '/demo-invitation.pdf';
                            link.download = `–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è_${competitionDetails?.title}.pdf`;
                            link.click();
                          }}
                          className="bg-green-600 hover:bg-green-700"
                        >
                          üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
                        </Button>
                      </div>

                      {/* –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ */}
                      <div className="flex items-center justify-between p-3 bg-purple-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <FileText className="h-8 w-8 text-purple-600" />
                          <div>
                            <p className="font-medium text-purple-900">–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏</p>
                            <p className="text-sm text-purple-600">–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</p>
                          </div>
                        </div>
                        <Button
                          size="sm"
                          onClick={() => {
                            // –°–∏–º—É–ª—è—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É
                            const link = document.createElement('a');
                            link.href = '/demo-additional-docs.zip';
                            link.download = `–î–æ–¥–∞—Ç–∫–æ–≤—ñ_–¥–æ–∫—É–º–µ–Ω—Ç–∏_${competitionDetails?.title}.zip`;
                            link.click();
                          }}
                          className="bg-purple-600 hover:bg-purple-700"
                        >
                          üì¶ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∞—Ä—Ö—ñ–≤
                        </Button>
                      </div>

                      <div className="mt-4 p-3 bg-gray-50 rounded-lg">
                        <p className="text-sm text-gray-600">
                          üí° <strong>–£–≤–∞–≥–∞:</strong> –í—Å—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ PDF.
                          –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ –≤–∏ –æ–∑–Ω–∞–π–æ–º–∏–ª–∏—Å—å –∑ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–º –ø–µ—Ä–µ–¥ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—î—é.
                        </p>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                {competitionDetails.contact_person && (
                  <Card>
                    <CardHeader>
                      <CardTitle className="flex items-center">
                        <Users className="h-5 w-5 mr-2 text-green-600" />
                        –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-3">
                        <div className="flex items-center">
                          <Users className="h-4 w-4 mr-2 text-gray-600" />
                          <span className="font-medium">{competitionDetails.contact_person.name}</span>
                        </div>
                        <div className="flex items-center">
                          <Phone className="h-4 w-4 mr-2 text-gray-600" />
                          <a href={`tel:${competitionDetails.contact_person.phone}`} className="text-blue-600 hover:underline">
                            {competitionDetails.contact_person.phone}
                          </a>
                        </div>
                        <div className="flex items-center">
                          <Mail className="h-4 w-4 mr-2 text-gray-600" />
                          <a href={`mailto:${competitionDetails.contact_person.email}`} className="text-blue-600 hover:underline">
                            {competitionDetails.contact_person.email}
                          </a>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* –û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Globe className="h-5 w-5 mr-2 text-blue-600" />
                      –û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-medium">{competitionDetails.club.name}</p>
                        <p className="text-gray-600 text-sm">{competitionDetails.club.city}</p>
                      </div>
                      <Badge variant="outline">
                        –ê–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–π –∫–ª—É–± –§–£–°–ê–§
                      </Badge>
                    </div>
                  </CardContent>
                </Card>

                {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è */}
                <div className="flex justify-end pt-4">
                  <Button
                    onClick={() => setDetailsDialogOpen(false)}
                    variant="outline"
                  >
                    –ó–∞–∫—Ä–∏—Ç–∏
                  </Button>
                </div>
              </div>
            )}
          </DialogContent>
        </Dialog>
      </div>
    </div>
  );
}
