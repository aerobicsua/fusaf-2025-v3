#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–ª—É–±—ñ–≤ —á–µ—Ä–µ–∑ API
const fs = require('fs');
const path = require('path');

// –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
const testClubs = [
  {
    firstName: "–û–ª–µ–Ω–∞",
    lastName: "–ü–µ—Ç—Ä–µ–Ω–∫–æ",
    middleName: "–í–∞—Å–∏–ª—ñ–≤–Ω–∞",
    position: "–î–∏—Ä–µ–∫—Ç–æ—Ä",
    email: "olena.petrenko@gracia.kiev.ua",
    phone: "+380501234567",
    password: "gracia2025",
    region: "–º. –ö–∏—ó–≤",
    city: "–ö–∏—ó–≤",
    clubName: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–± '–ì—Ä–∞—Ü—ñ—è'",
    clubType: "club",
    zipCode: "01001",
    clubRegion: "–º. –ö–∏—ó–≤",
    clubCity: "–ö–∏—ó–≤",
    clubAddress: "–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 25, –æ—Ñ. 301",
    clubDescription: "–ü—Ä–æ–≤—ñ–¥–Ω–∏–π –∫–ª—É–± —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏ –≤ –£–∫—Ä–∞—ó–Ω—ñ –∑ 15-—Ä—ñ—á–Ω–æ—é —ñ—Å—Ç–æ—Ä—ñ—î—é.",
    experience: "15 —Ä–æ–∫—ñ–≤ —É —Å—Ñ–µ—Ä—ñ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏. –ü—ñ–¥–≥–æ—Ç—É–≤–∞–ª–∞ –ø–æ–Ω–∞–¥ 200 —Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ñ–≤.",
    legalStatus: "–¢–û–í",
    website: "https://gracia.kiev.ua"
  },
  {
    firstName: "–ê–Ω–¥—Ä—ñ–π",
    lastName: "–ö–æ–≤–∞–ª—å—á—É–∫",
    middleName: "–û–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    position: "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç",
    email: "kovalchuk@olimpik.lviv.ua",
    phone: "+380671234567",
    password: "olimpik2025",
    region: "–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
    city: "–õ—å–≤—ñ–≤",
    clubName: "–§—ñ—Ç–Ω–µ—Å-–∫–ª—É–± '–û–ª—ñ–º–ø—ñ–∫'",
    clubType: "club",
    zipCode: "79000",
    clubRegion: "–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
    clubCity: "–õ—å–≤—ñ–≤",
    clubAddress: "–≤—É–ª. –ì–æ—Ä–æ–¥–æ—Ü—å–∫–∞, 67",
    clubDescription: "–°—É—á–∞—Å–Ω–∏–π —Ñ—ñ—Ç–Ω–µ—Å-–∫–ª—É–± –∑ –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω—É –∞–µ—Ä–æ–±—ñ–∫—É —Ç–∞ —Ñ—ñ—Ç–Ω–µ—Å.",
    experience: "10 —Ä–æ–∫—ñ–≤ –¥–æ—Å–≤—ñ–¥—É –≤ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—ñ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–º–∏ –∑–∞–∫–ª–∞–¥–∞–º–∏.",
    legalStatus: "–ü–ü",
    website: "https://olimpik.lviv.ua"
  }
];

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ PDF —Ñ–∞–π–ª—É
function createTestDocument() {
  const content = `%PDF-1.4
1 0 obj
<<
/Type /Catalog
/Pages 2 0 R
>>
endobj

2 0 obj
<<
/Type /Pages
/Kids [3 0 R]
/Count 1
>>
endobj

3 0 obj
<<
/Type /Page
/Parent 2 0 R
/MediaBox [0 0 612 792]
/Contents 4 0 R
>>
endobj

4 0 obj
<<
/Length 44
>>
stream
BT
/F1 12 Tf
100 700 Td
(Test Document) Tj
ET
endstream
endobj

xref
0 5
0000000000 65535 f
0000000009 00000 n
0000000074 00000 n
0000000120 00000 n
0000000214 00000 n
trailer
<<
/Size 5
/Root 1 0 R
>>
startxref
309
%%EOF`;

  return Buffer.from(content);
}

async function testClubRegistration(clubData) {
  try {
    console.log(`üìã –¢–µ—Å—Ç—É—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–ª—É–±—É: ${clubData.clubName}`);

    // –°—Ç–≤–æ—Ä—é—î–º–æ FormData
    const FormData = require('form-data');
    const form = new FormData();

    // –î–æ–¥–∞—î–º–æ –≤—Å—ñ –ø–æ–ª—è
    Object.keys(clubData).forEach(key => {
      form.append(key, clubData[key]);
    });

    // –î–æ–¥–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –¥–æ–∫—É–º–µ–Ω—Ç
    const testDoc = createTestDocument();
    form.append('registrationDocuments', testDoc, {
      filename: 'test-registration.pdf',
      contentType: 'application/pdf'
    });

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø—Ä–æ—Å
    const response = await fetch('http://localhost:3000/api/club-owner-registration', {
      method: 'POST',
      body: form,
      headers: form.getHeaders()
    });

    const result = await response.text();

    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status}`);

    if (response.ok) {
      try {
        const jsonResult = JSON.parse(result);
        console.log(`‚úÖ –£—Å–ø—ñ—Ö: ${jsonResult.message}`);
        console.log(`üë§ Email: ${jsonResult.data?.email}`);
        console.log(`üîë –ü–∞—Ä–æ–ª—å: ${jsonResult.data?.password}`);
        return { success: true, data: jsonResult };
      } catch (e) {
        console.log(`‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –æ—Ç—Ä–∏–º–∞–Ω–∞ (–Ω–µ JSON):`, result.substring(0, 200));
        return { success: true, text: result };
      }
    } else {
      console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${result.substring(0, 200)}`);
      return { success: false, error: result };
    }

  } catch (error) {
    console.error(`‚ùå –í–∏–∫–ª—é—á–µ–Ω–Ω—è:`, error.message);
    return { success: false, error: error.message };
  }
}

async function checkClubRequests() {
  try {
    console.log('\nüìã –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫...');
    const response = await fetch('http://localhost:3000/api/clubs/requests');
    const result = await response.json();

    console.log(`üìä –í—Å—å–æ–≥–æ –∑–∞—è–≤–æ–∫: ${result.requests?.length || 0}`);
    console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`, result.stats);

    if (result.requests?.length > 0) {
      result.requests.forEach((req, index) => {
        console.log(`${index + 1}. ${req.user.name} - ${req.club.name} (${req.status})`);
      });
    }

    return result;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞—è–≤–æ–∫:', error.message);
    return null;
  }
}

async function main() {
  console.log('üöÄ –ü–æ—á–∞—Ç–æ–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–ª—É–±—ñ–≤\n');

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
  await checkClubRequests();

  // –¢–µ—Å—Ç—É—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–ª—É–±—ñ–≤
  for (let i = 0; i < testClubs.length; i++) {
    console.log(`\n--- –¢–µ—Å—Ç ${i + 1}/${testClubs.length} ---`);
    const result = await testClubRegistration(testClubs[i]);

    if (result.success) {
      console.log('‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ');
    } else {
      console.log('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π—à–æ–≤');
    }

    // –ü–∞—É–∑–∞ –º—ñ–∂ –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 1000));
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
  console.log('\nüìã –§—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω:');
  await checkClubRequests();

  console.log('\nüèÅ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç —è–∫—â–æ —Å–∫—Ä–∏–ø—Ç –≤–∏–∫–ª–∏–∫–∞–Ω–æ –Ω–∞–ø—Ä—è–º—É
if (require.main === module) {
  main().catch(console.error);
}

module.exports = { testClubRegistration, checkClubRequests };
