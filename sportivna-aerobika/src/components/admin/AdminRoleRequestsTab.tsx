"use client";

import { useState, useEffect, useCallback } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '@/components/ui/table';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from '@/components/ui/dialog';
import {
  UserCheck,
  UserX,
  Clock,
  CheckCircle,
  XCircle,
  Eye,
  Filter,
  Download,
  Users,
  Building,
  Trophy,
  AlertCircle,
  Database
} from 'lucide-react';
// –¢–∏–ø RoleRequest –¥–ª—è TypeScript
interface RoleRequest {
  id: string;
  userEmail: string;
  userName: string;
  currentRole: string;
  requestedRole: string;
  reason: string;
  status: 'pending' | 'approved' | 'rejected';
  requestDate: string;
  reviewedBy?: string;
  reviewDate?: string;
  reviewComment?: string;
}

const ROLE_ICONS = {
  athlete: Trophy,
  club_owner: Building,
  coach_judge: UserCheck
};

const ROLE_NAMES = {
  athlete: '–°–ø–æ—Ä—Ç—Å–º–µ–Ω',
  club_owner: '–í–ª–∞—Å–Ω–∏–∫ –∫–ª—É–±—É',
  coach_judge: '–¢—Ä–µ–Ω–µ—Ä/–°—É–¥–¥—è'
};

export function AdminRoleRequestsTab() {
  const [requests, setRequests] = useState<RoleRequest[]>([]);
  const [loading, setLoading] = useState(true);
  const [statusFilter, setStatusFilter] = useState('all');
  const [selectedRequest, setSelectedRequest] = useState<RoleRequest | null>(null);
  const [reviewDialogOpen, setReviewDialogOpen] = useState(false);
  const [reviewComment, setReviewComment] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);

  console.log('üéõÔ∏è AdminRoleRequestsTab –∑ HYBRID STORAGE:', {
    requestsCount: requests.length,
    loading,
    statusFilter,
    hasSelectedRequest: !!selectedRequest
  });

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ —á–µ—Ä–µ–∑ API
  const fetchRequests = useCallback(async () => {
    try {
      setLoading(true);
      console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ API, —Ñ—ñ–ª—å—Ç—Ä:', statusFilter);

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —á–µ—Ä–µ–∑ –ø—É–±–ª—ñ—á–Ω–∏–π admin endpoint
      const response = await fetch(`/api/admin-requests${statusFilter !== 'all' ? `?status=${statusFilter}` : ''}`);

      if (response.ok) {
        const data = await response.json();
        const allRequests = data.requests || [];

        console.log('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —á–µ—Ä–µ–∑ API:', {
          total: allRequests.length,
          storageType: 'API_ENDPOINT',
          debug: data.debug
        });

        setRequests(allRequests);
      } else {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ API –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', response.status);
        setRequests([]);
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ API:', error);
      setRequests([]);
    } finally {
      setLoading(false);
    }
  }, [statusFilter]);

  useEffect(() => {
    fetchRequests();
  }, [statusFilter, fetchRequests]);

  // –û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É (—Å—Ö–≤–∞–ª–µ–Ω–Ω—è/–≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è) —á–µ—Ä–µ–∑ API
  const handleRequestReview = async (requestId: string, status: 'approved' | 'rejected') => {
    try {
      setIsProcessing(true);
      console.log('üîÑ –û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É —á–µ—Ä–µ–∑ API:', { requestId, status });

      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const response = await fetch('/api/role-requests', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          requestId,
          status,
          comment: reviewComment.trim()
        }),
      });

      if (response.ok) {
        const result = await response.json();
        console.log('‚úÖ –ó–∞–ø–∏—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ API:', result.message);

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Ç—ñ–≤
        await fetchRequests();
        setReviewDialogOpen(false);
        setSelectedRequest(null);
        setReviewComment('');

        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
        alert(`${status === 'approved' ? '–ó–∞–ø–∏—Ç —Å—Ö–≤–∞–ª–µ–Ω–æ' : '–ó–∞–ø–∏—Ç –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ'}. Email —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.`);
      } else {
        const error = await response.json();
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ API:', error);
        alert(`–ü–æ–º–∏–ª–∫–∞: ${error.error || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –∑–∞–ø–∏—Ç'}`);
      }
    } catch (error) {
      console.error('üí• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É');
    } finally {
      setIsProcessing(false);
    }
  };

  const getStatusBadge = (status: string) => {
    const configs = {
      pending: {
        label: '–û—á—ñ–∫—É—î',
        icon: Clock,
        className: 'bg-yellow-500 text-white'
      },
      approved: {
        label: '–°—Ö–≤–∞–ª–µ–Ω–æ',
        icon: CheckCircle,
        className: 'bg-green-500 text-white'
      },
      rejected: {
        label: '–í—ñ–¥—Ö–∏–ª–µ–Ω–æ',
        icon: XCircle,
        className: 'bg-red-500 text-white'
      }
    };

    const config = configs[status as keyof typeof configs];
    const Icon = config.icon;

    return (
      <Badge className={config.className}>
        <Icon className="h-3 w-3 mr-1" />
        {config.label}
      </Badge>
    );
  };

  const getRoleIcon = (role: string) => {
    const Icon = ROLE_ICONS[role as keyof typeof ROLE_ICONS] || Users;
    return <Icon className="h-4 w-4" />;
  };

  const getRoleName = (role: string) => {
    return ROLE_NAMES[role as keyof typeof ROLE_NAMES] || role;
  };

  const getStats = () => {
    const total = requests.length;
    const pending = requests.filter(r => r.status === 'pending').length;
    const approved = requests.filter(r => r.status === 'approved').length;
    const rejected = requests.filter(r => r.status === 'rejected').length;

    return {
      total,
      pending,
      approved,
      rejected,
      storageType: 'API_ENDPOINT',
      lastUpdate: new Date().toISOString()
    };
  };

  const handleExport = () => {
    const csvContent = "data:text/csv;charset=utf-8," +
      "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á,Email,–ü–æ—Ç–æ—á–Ω–∞ —Ä–æ–ª—å,–ó–∞–ø–∏—Ç—É–≤–∞–Ω–∞ —Ä–æ–ª—å,–°—Ç–∞—Ç—É—Å,–î–∞—Ç–∞ –∑–∞–ø–∏—Ç—É,–†–æ–∑–≥–ª—è–Ω—É–≤,–î–∞—Ç–∞ —Ä–æ–∑–≥–ª—è–¥—É\n" +
      requests.map(req =>
        `"${req.userName}","${req.userEmail}","${getRoleName(req.currentRole)}","${getRoleName(req.requestedRole)}","${req.status}","${new Date(req.requestDate).toLocaleDateString('uk-UA')}","${req.reviewedBy || ''}","${req.reviewDate ? new Date(req.reviewDate).toLocaleDateString('uk-UA') : ''}"`
      ).join("\n");

    const encodedUri = encodeURI(csvContent);
    const link = document.createElement("a");
    link.setAttribute("href", encodedUri);
    link.setAttribute("download", "role_requests_export.csv");
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  const stats = getStats();

  return (
    <div className="space-y-6">
      {/* Debug —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑ API */}
      <Card className="border-green-200 bg-green-50">
        <CardHeader>
          <CardTitle className="text-sm text-green-800 flex items-center">
            <Database className="h-4 w-4 mr-2" />
            üî• API –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–∞—Ü—ñ—è - –ü—Ä–æ–±–ª–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –≤–∏—Ä—ñ—à–µ–Ω–æ!
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="text-xs text-green-700 space-y-1">
            <p>üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑–∞–ø–∏—Ç—ñ–≤: <strong>{requests.length}</strong></p>
            <p>üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: <strong>{loading ? '–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...' : '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'}</strong></p>
            <p>üéõÔ∏è –§—ñ–ª—å—Ç—Ä: <strong>{statusFilter}</strong></p>
            <p>üíæ –°—Ö–æ–≤–∏—â–µ: <strong>Admin API (/api/admin-requests)</strong></p>
            <p>‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è: <strong>–¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ API</strong></p>
            <p>‚è∞ –û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: <strong>{new Date().toLocaleTimeString('uk-UA')}</strong></p>
            <p className="text-green-600 font-semibold">
              üéâ Athlete ‚Üî Admin —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è!
            </p>
          </div>
        </CardContent>
      </Card>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card>
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">–í—Å—å–æ–≥–æ –∑–∞–ø–∏—Ç—ñ–≤</p>
                <p className="text-2xl font-bold">{stats.total}</p>
              </div>
              <Users className="h-8 w-8 text-blue-600" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">–û—á—ñ–∫—É—é—Ç—å</p>
                <p className="text-2xl font-bold text-yellow-600">{stats.pending}</p>
              </div>
              <Clock className="h-8 w-8 text-yellow-600" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">–°—Ö–≤–∞–ª–µ–Ω–æ</p>
                <p className="text-2xl font-bold text-green-600">{stats.approved}</p>
              </div>
              <CheckCircle className="h-8 w-8 text-green-600" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">–í—ñ–¥—Ö–∏–ª–µ–Ω–æ</p>
                <p className="text-2xl font-bold text-red-600">{stats.rejected}</p>
              </div>
              <XCircle className="h-8 w-8 text-red-600" />
            </div>
          </CardContent>
        </Card>
      </div>

      {/* –§—ñ–ª—å—Ç—Ä–∏ —Ç–∞ –¥—ñ—ó */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center justify-between">
            <span className="flex items-center">
              <Filter className="h-5 w-5 mr-2" />
              –§—ñ–ª—å—Ç—Ä–∏ —Ç–∞ –¥—ñ—ó
            </span>
            <Button onClick={handleExport} variant="outline" size="sm">
              <Download className="h-4 w-4 mr-2" />
              –ï–∫—Å–ø–æ—Ä—Ç CSV
            </Button>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex items-center space-x-4">
            <div>
              <Label>–°—Ç–∞—Ç—É—Å</Label>
              <Select value={statusFilter} onValueChange={setStatusFilter}>
                <SelectTrigger className="w-48">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å—ñ –∑–∞–ø–∏—Ç–∏</SelectItem>
                  <SelectItem value="pending">–û—á—ñ–∫—É—é—Ç—å</SelectItem>
                  <SelectItem value="approved">–°—Ö–≤–∞–ª–µ–Ω—ñ</SelectItem>
                  <SelectItem value="rejected">–í—ñ–¥—Ö–∏–ª–µ–Ω—ñ</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –¢–∞–±–ª–∏—Ü—è –∑–∞–ø–∏—Ç—ñ–≤ */}
      <Card>
        <CardHeader>
          <CardTitle>
            –ó–∞–ø–∏—Ç–∏ –Ω–∞ —Ä–æ–ª—ñ ({requests.length})
          </CardTitle>
        </CardHeader>
        <CardContent>
          {loading ? (
            <div className="flex items-center justify-center h-32">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600" />
            </div>
          ) : (
            <div className="overflow-x-auto">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á</TableHead>
                    <TableHead>–ü–æ—Ç–æ—á–Ω–∞ —Ä–æ–ª—å</TableHead>
                    <TableHead>–ó–∞–ø–∏—Ç—É–≤–∞–Ω–∞ —Ä–æ–ª—å</TableHead>
                    <TableHead>–î–∞—Ç–∞ –∑–∞–ø–∏—Ç—É</TableHead>
                    <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                    <TableHead>–î—ñ—ó</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {requests.map((request) => (
                    <TableRow key={request.id}>
                      <TableCell>
                        <div>
                          <p className="font-medium">{request.userName}</p>
                          <p className="text-sm text-gray-500">{request.userEmail}</p>
                        </div>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center space-x-2">
                          {getRoleIcon(request.currentRole)}
                          <span>{getRoleName(request.currentRole)}</span>
                        </div>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center space-x-2">
                          {getRoleIcon(request.requestedRole)}
                          <span className="font-medium">{getRoleName(request.requestedRole)}</span>
                        </div>
                      </TableCell>
                      <TableCell>
                        {new Date(request.requestDate).toLocaleDateString('uk-UA')}
                      </TableCell>
                      <TableCell>{getStatusBadge(request.status)}</TableCell>
                      <TableCell>
                        <div className="flex space-x-2">
                          <Dialog>
                            <DialogTrigger asChild>
                              <Button size="sm" variant="outline">
                                <Eye className="h-4 w-4" />
                              </Button>
                            </DialogTrigger>
                            <DialogContent className="max-w-2xl">
                              <DialogHeader>
                                <DialogTitle>–î–µ—Ç–∞–ª—ñ –∑–∞–ø–∏—Ç—É –Ω–∞ —Ä–æ–ª—å</DialogTitle>
                                <DialogDescription>
                                  –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                                </DialogDescription>
                              </DialogHeader>
                              <div className="space-y-4">
                                <div className="grid grid-cols-2 gap-4">
                                  <div>
                                    <Label>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á</Label>
                                    <p className="font-medium">{request.userName}</p>
                                    <p className="text-sm text-gray-500">{request.userEmail}</p>
                                  </div>
                                  <div>
                                    <Label>–î–∞—Ç–∞ –∑–∞–ø–∏—Ç—É</Label>
                                    <p>{new Date(request.requestDate).toLocaleString('uk-UA')}</p>
                                  </div>
                                </div>

                                <div className="grid grid-cols-2 gap-4">
                                  <div>
                                    <Label>–ü–æ—Ç–æ—á–Ω–∞ —Ä–æ–ª—å</Label>
                                    <div className="flex items-center space-x-2 mt-1">
                                      {getRoleIcon(request.currentRole)}
                                      <span>{getRoleName(request.currentRole)}</span>
                                    </div>
                                  </div>
                                  <div>
                                    <Label>–ó–∞–ø–∏—Ç—É–≤–∞–Ω–∞ —Ä–æ–ª—å</Label>
                                    <div className="flex items-center space-x-2 mt-1">
                                      {getRoleIcon(request.requestedRole)}
                                      <span className="font-medium">{getRoleName(request.requestedRole)}</span>
                                    </div>
                                  </div>
                                </div>

                                <div>
                                  <Label>–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–ø–∏—Ç—É</Label>
                                  <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                                    <p className="text-sm">{request.reason}</p>
                                  </div>
                                </div>

                                <div>
                                  <Label>–°—Ç–∞—Ç—É—Å</Label>
                                  <div className="mt-1">
                                    {getStatusBadge(request.status)}
                                  </div>
                                </div>

                                {request.reviewedBy && (
                                  <div className="border-t pt-4">
                                    <div className="grid grid-cols-2 gap-4">
                                      <div>
                                        <Label>–†–æ–∑–≥–ª—è–Ω—É–≤</Label>
                                        <p>{request.reviewedBy}</p>
                                      </div>
                                      <div>
                                        <Label>–î–∞—Ç–∞ —Ä–æ–∑–≥–ª—è–¥—É</Label>
                                        <p>{request.reviewDate ? new Date(request.reviewDate).toLocaleString('uk-UA') : '-'}</p>
                                      </div>
                                    </div>

                                    {request.reviewComment && (
                                      <div className="mt-3">
                                        <Label>–ö–æ–º–µ–Ω—Ç–∞—Ä</Label>
                                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                                          <p className="text-sm">{request.reviewComment}</p>
                                        </div>
                                      </div>
                                    )}
                                  </div>
                                )}
                              </div>
                            </DialogContent>
                          </Dialog>

                          {request.status === 'pending' && (
                            <>
                              <Button
                                size="sm"
                                variant="outline"
                                onClick={() => {
                                  setSelectedRequest(request);
                                  setReviewDialogOpen(true);
                                }}
                              >
                                <UserCheck className="h-4 w-4" />
                              </Button>
                            </>
                          )}
                        </div>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –î—ñ–∞–ª–æ–≥ —Ä–æ–∑–≥–ª—è–¥—É –∑–∞–ø–∏—Ç—É */}
      <Dialog open={reviewDialogOpen} onOpenChange={setReviewDialogOpen}>
        <DialogContent>
          <DialogHeader>
            <DialogTitle>–†–æ–∑–≥–ª—è–¥ –∑–∞–ø–∏—Ç—É –Ω–∞ —Ä–æ–ª—å</DialogTitle>
            <DialogDescription>
              –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é —Ç–∞ –¥–æ–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)
            </DialogDescription>
          </DialogHeader>

          {selectedRequest && (
            <div className="space-y-4">
              <div className="bg-gray-50 rounded-lg p-4">
                <h4 className="font-medium mb-2">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–ø–∏—Ç:</h4>
                <p><strong>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:</strong> {selectedRequest.userName}</p>
                <p><strong>–ó–∞–ø–∏—Ç—É–≤–∞–Ω–∞ —Ä–æ–ª—å:</strong> {getRoleName(selectedRequest.requestedRole)}</p>
                <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> {selectedRequest.reason}</p>
              </div>

              <div>
                <Label htmlFor="comment">–ö–æ–º–µ–Ω—Ç–∞—Ä (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)</Label>
                <Textarea
                  id="comment"
                  placeholder="–î–æ–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ —Ä—ñ—à–µ–Ω–Ω—è..."
                  value={reviewComment}
                  onChange={(e) => setReviewComment(e.target.value)}
                  className="mt-1"
                />
              </div>
            </div>
          )}

          <DialogFooter className="flex space-x-2">
            <Button
              onClick={() => selectedRequest && handleRequestReview(selectedRequest.id, 'rejected')}
              variant="outline"
              disabled={isProcessing}
              className="border-red-200 text-red-600 hover:bg-red-50"
            >
              <UserX className="h-4 w-4 mr-2" />
              {isProcessing ? '–û–±—Ä–æ–±–∫–∞...' : '–í—ñ–¥—Ö–∏–ª–∏—Ç–∏'}
            </Button>
            <Button
              onClick={() => selectedRequest && handleRequestReview(selectedRequest.id, 'approved')}
              disabled={isProcessing}
              className="bg-green-600 hover:bg-green-700"
            >
              <UserCheck className="h-4 w-4 mr-2" />
              {isProcessing ? '–û–±—Ä–æ–±–∫–∞...' : '–°—Ö–≤–∞–ª–∏—Ç–∏'}
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>
    </div>
  );
}
