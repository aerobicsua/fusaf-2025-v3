// üî• PERSISTENT STORAGE - –†—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏ Netlify Function Isolation
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î LocalStorage –±—Ä–∞—É–∑–µ—Ä–∞ + API —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –º—ñ–∂ —Å–µ—Å—ñ—è–º–∏

interface RoleRequest {
  id: string;
  userEmail: string;
  userName: string;
  currentRole: string;
  requestedRole: string;
  reason: string;
  status: 'pending' | 'approved' | 'rejected';
  requestDate: string;
  reviewedBy?: string;
  reviewDate?: string;
  reviewComment?: string;
}

const STORAGE_KEY = 'fusaf_role_requests';
const SYNC_ENDPOINT = '/api/sync-requests';

// –ü–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ
const INITIAL_DATA: RoleRequest[] = [
  {
    id: '1',
    userEmail: 'john.doe@example.com',
    userName: '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ',
    currentRole: 'athlete',
    requestedRole: 'club_owner',
    reason: '–•–æ—á—É –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤–ª–∞—Å–Ω–∏–π –∫–ª—É–± —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏ –≤ –ö–∏—î–≤—ñ. –ú–∞—é –¥–æ—Å–≤—ñ–¥ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ –±–∞–∂–∞–Ω–Ω—è —Ä–æ–∑–≤–∏–≤–∞—Ç–∏ —Ü–µ–π —Å–ø–æ—Ä—Ç —Å–µ—Ä–µ–¥ –º–æ–ª–æ–¥—ñ.',
    status: 'pending',
    requestDate: '2025-01-07T10:30:00.000Z'
  },
  {
    id: '2',
    userEmail: 'coach.maria@example.com',
    userName: '–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ',
    currentRole: 'athlete',
    requestedRole: 'coach_judge',
    reason: '–ú–∞—é –¥–æ—Å–≤—ñ–¥ —Ç—Ä–µ–Ω–µ—Ä—Å—å–∫–æ—ó —Ä–æ–±–æ—Ç–∏ 5 —Ä–æ–∫—ñ–≤ —Ç–∞ —Ö–æ—á—É —Å—Ç–∞—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–º —Å—É–¥–¥–µ—é –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –∑–º–∞–≥–∞–Ω—å.',
    status: 'approved',
    requestDate: '2025-01-05T14:20:00.000Z',
    reviewedBy: 'andfedos@gmail.com',
    reviewDate: '2025-01-06T09:15:00.000Z',
    reviewComment: '–°—Ö–≤–∞–ª–µ–Ω–æ. –î–æ—Å–≤—ñ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.'
  },
  {
    id: '3',
    userEmail: 'trainer.alex@example.com',
    userName: '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –®–µ–≤—á–µ–Ω–∫–æ',
    currentRole: 'athlete',
    requestedRole: 'coach_judge',
    reason: '–ó–∞–∫—ñ–Ω—á–∏–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç, –º–∞—é –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—é —Ç—Ä–µ–Ω–µ—Ä–∞ –∑ –≥—ñ–º–Ω–∞—Å—Ç–∏–∫–∏. –•–æ—á—É —Ä–æ–∑—à–∏—Ä–∏—Ç–∏ —Å–≤–æ—ó –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤ –∞–µ—Ä–æ–±—ñ—Ü—ñ.',
    status: 'rejected',
    requestDate: '2025-01-04T16:45:00.000Z',
    reviewedBy: 'andfedos@gmail.com',
    reviewDate: '2025-01-05T11:30:00.000Z',
    reviewComment: '–ü–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–æ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—é –≤ –∞–µ—Ä–æ–±—ñ—Ü—ñ.'
  },
  {
    id: '1751971234567',
    userEmail: 'aerobicsua@gmail.com',
    userName: 'Andrii Fedosenko',
    currentRole: 'athlete',
    requestedRole: 'club_owner',
    reason: '–•–æ—á—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤–ª–∞—Å–Ω–∏–π –∫–ª—É–± —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É —Ü—å–æ–≥–æ –≤–∏–¥—É —Å–ø–æ—Ä—Ç—É –≤ –£–∫—Ä–∞—ó–Ω—ñ. –ú–∞—é –¥–æ—Å–≤—ñ–¥ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏—Ö –∑–∞—Ö–æ–¥—ñ–≤ —Ç–∞ —Ä–æ–±–æ—Ç–∏ –∑ –º–æ–ª–æ–¥–¥—é.',
    status: 'pending',
    requestDate: '2025-07-08T10:45:00.000Z'
  }
];

export class PersistentStorage {
  private static isClient(): boolean {
    return typeof window !== 'undefined';
  }

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ –∑ LocalStorage –∞–±–æ —Å—Ç–≤–æ—Ä—é—î –ø–æ—á–∞—Ç–∫–æ–≤—ñ
  static initialize(): RoleRequest[] {
    if (!this.isClient()) {
      console.log('üî¥ Server side - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ');
      return [...INITIAL_DATA];
    }

    try {
      const stored = localStorage.getItem(STORAGE_KEY);
      if (stored) {
        const data = JSON.parse(stored);
        console.log('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ LocalStorage:', data.length, '–∑–∞–ø–∏—Ç—ñ–≤');
        return data;
      } else {
        console.log('üÜï –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è LocalStorage –∑ –ø–æ—á–∞—Ç–∫–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏');
        this.save(INITIAL_DATA);
        return [...INITIAL_DATA];
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó LocalStorage:', error);
      return [...INITIAL_DATA];
    }
  }

  // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ LocalStorage
  static save(requests: RoleRequest[]): void {
    if (!this.isClient()) {
      console.log('üî¥ Server side - –Ω–µ –º–æ–∂–µ–º–æ –∑–±–µ—Ä–µ–≥—Ç–∏ –≤ LocalStorage');
      return;
    }

    try {
      localStorage.setItem(STORAGE_KEY, JSON.stringify(requests));
      localStorage.setItem(`${STORAGE_KEY}_timestamp`, new Date().toISOString());
      console.log('üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –≤ LocalStorage:', requests.length, '–∑–∞–ø–∏—Ç—ñ–≤');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ LocalStorage:', error);
    }
  }

  // –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–ø–∏—Ç–∏
  static getAll(): RoleRequest[] {
    return this.initialize();
  }

  // –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Ç
  static add(request: RoleRequest): void {
    const requests = this.getAll();

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–∞–ø–∏—Ç –≤–∂–µ —ñ—Å–Ω—É—î
    const exists = requests.find(r => r.id === request.id);
    if (!exists) {
      requests.push(request);
      this.save(requests);
      console.log('‚úÖ –î–æ–¥–∞–Ω–æ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Ç:', request.id);

      // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
      this.syncToServer(requests);
    }
  }

  // –û–Ω–æ–≤–∏—Ç–∏ –∑–∞–ø–∏—Ç
  static update(requestId: string, updates: Partial<RoleRequest>): boolean {
    const requests = this.getAll();
    const index = requests.findIndex(r => r.id === requestId);

    if (index === -1) {
      console.log('‚ùå –ó–∞–ø–∏—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:', requestId);
      return false;
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ø–∏—Ç
    requests[index] = {
      ...requests[index],
      ...updates
    };

    this.save(requests);
    console.log('‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Ç:', requestId, '—Å—Ç–∞—Ç—É—Å:', updates.status);

    // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
    this.syncToServer(requests);

    return true;
  }

  // –ó–Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Ç –∑–∞ email —Ç–∞ —Å—Ç–∞—Ç—É—Å–æ–º
  static findByEmailAndStatus(email: string, status: 'pending' | 'approved' | 'rejected'): RoleRequest | null {
    const requests = this.getAll();
    const found = requests.find(r => r.userEmail === email && r.status === status);
    console.log('üîç –ü–æ—à—É–∫ –∑–∞–ø–∏—Ç—É:', email, status, '- –∑–Ω–∞–π–¥–µ–Ω–æ:', !!found);
    return found || null;
  }

  // –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  static getStats() {
    const requests = this.getAll();
    const stats = {
      total: requests.length,
      pending: requests.filter(r => r.status === 'pending').length,
      approved: requests.filter(r => r.status === 'approved').length,
      rejected: requests.filter(r => r.status === 'rejected').length,
      storageType: 'PERSISTENT_LOCALSTORAGE',
      lastUpdate: this.isClient() ? localStorage.getItem(`${STORAGE_KEY}_timestamp`) : null
    };

    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats);
    return stats;
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º (–¥–ª—è —ñ–Ω—à–∏—Ö –∞–¥–º—ñ–Ω—ñ–≤)
  static async syncToServer(requests: RoleRequest[]): Promise<void> {
    if (!this.isClient()) return;

    try {
      const response = await fetch(SYNC_ENDPOINT, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          requests,
          timestamp: new Date().toISOString(),
          source: 'persistent_storage'
        })
      });

      if (response.ok) {
        console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º');
      } else {
        console.log('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º');
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', error);
      // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ - LocalStorage –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –æ—Å–Ω–æ–≤–Ω–∏–º –¥–∂–µ—Ä–µ–ª–æ–º
    }
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ —Å–µ—Ä–≤–µ—Ä–∞ (–æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—ñ–¥ —ñ–Ω—à–∏—Ö –∞–¥–º—ñ–Ω—ñ–≤)
  static async syncFromServer(): Promise<void> {
    if (!this.isClient()) return;

    try {
      const response = await fetch(SYNC_ENDPOINT);
      if (response.ok) {
        const data = await response.json();
        if (data.requests && Array.isArray(data.requests)) {
          this.save(data.requests);
          console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–∞:', data.requests.length, '–∑–∞–ø–∏—Ç—ñ–≤');
        }
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –∑ —Å–µ—Ä–≤–µ—Ä–∞:', error);
      // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ - LocalStorage –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è
    }
  }

  // –û—á–∏—Å—Ç–∏—Ç–∏ –¥–∞–Ω—ñ (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
  static clear(): void {
    if (!this.isClient()) return;

    localStorage.removeItem(STORAGE_KEY);
    localStorage.removeItem(`${STORAGE_KEY}_timestamp`);
    console.log('üßπ LocalStorage –æ—á–∏—â–µ–Ω–æ');
  }

  // Debug —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
  static getDebugInfo() {
    const requests = this.getAll();
    const stats = this.getStats();

    return {
      message: 'üî• PERSISTENT Storage (LocalStorage + API Sync)',
      storageType: 'PERSISTENT_LOCALSTORAGE',
      compatible: '–ë—Ä–∞—É–∑–µ—Ä LocalStorage + —Å–µ—Ä–≤–µ—Ä–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è',
      explanation: {
        problem: 'Netlify serverless —Ñ—É–Ω–∫—Ü—ñ—ó —ñ–∑–æ–ª—å–æ–≤–∞–Ω—ñ',
        solution: 'LocalStorage —è–∫ primary + API —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –º—ñ–∂ –∞–¥–º—ñ–Ω–∞–º–∏',
        improvement: '–î–∞–Ω—ñ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
      },
      storage: {
        totalRequests: requests.length,
        isClient: this.isClient(),
        hasLocalStorage: this.isClient() && !!localStorage.getItem(STORAGE_KEY),
        lastUpdate: stats.lastUpdate
      },
      requests: requests.map(req => ({
        id: req.id,
        userEmail: req.userEmail,
        userName: req.userName,
        requestedRole: req.requestedRole,
        status: req.status,
        requestDate: req.requestDate,
        reason: req.reason.substring(0, 50) + '...'
      }))
    };
  }
}

export type { RoleRequest };
