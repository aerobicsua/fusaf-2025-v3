"use client";

import { useState, useEffect } from 'react';

export default function AdminCoachesPage() {
  const [coaches, setCoaches] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterRole, setFilterRole] = useState('all');
  const [filterStatus, setFilterStatus] = useState('all');
  const [filterLicense, setFilterLicense] = useState('all');

  useEffect(() => {
    loadCoaches();
  }, []);

  const loadCoaches = async () => {
    try {
      // –ü–æ—á–∞—Ç–æ–∫ –∑ –Ω—É–ª—è - –±–µ–∑ –¥–µ–º–æ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤
      const mockCoaches: any[] = [];
      setCoaches(mockCoaches);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—Ä–µ–Ω–µ—Ä—ñ–≤:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleRoleUpdate = async (coachId: string, newRoles: string[]) => {
    try {
      // –°–∏–º—É–ª—è—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–ª–µ–π
      setCoaches(coaches.map((coach: any) =>
        coach.id === coachId ? { ...coach, roles: newRoles } : coach
      ));
      alert('–†–æ–ª—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
    } catch (error) {
      alert('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–ª–µ–π');
    }
  };

  const handleLicenseRenewal = async (coachId: string) => {
    const newExpiry = prompt('–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –¥–∞—Ç—É –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó (YYYY-MM-DD):');
    if (!newExpiry) return;

    try {
      setCoaches(coaches.map((coach: any) =>
        coach.id === coachId ? { ...coach, licenseExpiry: newExpiry } : coach
      ));
      alert('–õ—ñ—Ü–µ–Ω–∑—ñ—é –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
    } catch (error) {
      alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó');
    }
  };

  const handleBlock = async (coachId: string, block: boolean) => {
    try {
      setCoaches(coaches.map((coach: any) =>
        coach.id === coachId ? { ...coach, blocked: block } : coach
      ));
      alert(`–¢—Ä–µ–Ω–µ—Ä–∞/—Å—É–¥–¥—é ${block ? '–∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ' : '—Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ'} —É—Å–ø—ñ—à–Ω–æ`);
    } catch (error) {
      alert('–ü–æ–º–∏–ª–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É');
    }
  };

  const isLicenseExpiring = (expiry: string) => {
    const expiryDate = new Date(expiry);
    const today = new Date();
    const daysUntilExpiry = Math.ceil((expiryDate.getTime() - today.getTime()) / (1000 * 3600 * 24));
    return daysUntilExpiry <= 30;
  };

  const filteredCoaches = coaches.filter((coach: any) => {
    const matchesSearch = coach.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         coach.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         coach.club?.toLowerCase().includes(searchTerm.toLowerCase());

    const matchesRole = filterRole === 'all' || coach.roles.includes(filterRole);

    const matchesStatus = filterStatus === 'all' ||
                         (filterStatus === 'active' && !coach.blocked) ||
                         (filterStatus === 'blocked' && coach.blocked);

    const matchesLicense = filterLicense === 'all' ||
                          (filterLicense === 'expiring' && isLicenseExpiring(coach.licenseExpiry)) ||
                          (filterLicense === 'valid' && !isLicenseExpiring(coach.licenseExpiry));

    return matchesSearch && matchesRole && matchesStatus && matchesLicense;
  });

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div>
              <h1 className="text-2xl font-bold text-gray-900">üë®‚Äçüè´ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç—Ä–µ–Ω–µ—Ä–∞–º–∏ —Ç–∞ —Å—É–¥–¥—è–º–∏</h1>
              <p className="text-gray-600 text-sm">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ä–æ–ª—è–º–∏, –ª—ñ—Ü–µ–Ω–∑—ñ—è–º–∏ —Ç–∞ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è–º–∏</p>
            </div>
            <div className="flex items-center space-x-4">
              <a href="/admin-panel" className="text-gray-500 hover:text-gray-700">
                ‚Üê –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∞–Ω–µ–ª—ñ
              </a>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

        {/* Filters */}
        <div className="bg-white rounded-lg shadow p-6 mb-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
            <div>
              <input
                type="text"
                placeholder="–ü–æ—à—É–∫ –ø–æ —ñ–º–µ–Ω—ñ, email..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
              />
            </div>

            <select
              value={filterRole}
              onChange={(e) => setFilterRole(e.target.value)}
              className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
            >
              <option value="all">–í—Å—ñ —Ä–æ–ª—ñ</option>
              <option value="coach">–¢—ñ–ª—å–∫–∏ —Ç—Ä–µ–Ω–µ—Ä–∏</option>
              <option value="judge">–¢—ñ–ª—å–∫–∏ —Å—É–¥–¥—ñ</option>
            </select>

            <select
              value={filterStatus}
              onChange={(e) => setFilterStatus(e.target.value)}
              className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
            >
              <option value="all">–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
              <option value="active">–ê–∫—Ç–∏–≤–Ω—ñ</option>
              <option value="blocked">–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ</option>
            </select>

            <select
              value={filterLicense}
              onChange={(e) => setFilterLicense(e.target.value)}
              className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
            >
              <option value="all">–í—Å—ñ –ª—ñ—Ü–µ–Ω–∑—ñ—ó</option>
              <option value="valid">–î—ñ–π—Å–Ω—ñ –ª—ñ—Ü–µ–Ω–∑—ñ—ó</option>
              <option value="expiring">–ó–∞–∫—ñ–Ω—á—É—é—Ç—å—Å—è</option>
            </select>

            <button
              className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700"
              onClick={() => alert('–ï–∫—Å–ø–æ—Ä—Ç –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ')}
            >
              üìä –ï–∫—Å–ø–æ—Ä—Ç XLS
            </button>
          </div>
        </div>

        {/* Statistics Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
          <div className="bg-white rounded-lg shadow p-6">
            <div className="text-2xl font-bold text-gray-900">{coaches.length}</div>
            <div className="text-sm text-gray-600">–í—Å—å–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤/—Å—É–¥–¥—ñ–≤</div>
          </div>
          <div className="bg-white rounded-lg shadow p-6">
            <div className="text-2xl font-bold text-green-600">
              {coaches.filter((c: any) => c.roles.includes('coach')).length}
            </div>
            <div className="text-sm text-gray-600">–¢—Ä–µ–Ω–µ—Ä–∏</div>
          </div>
          <div className="bg-white rounded-lg shadow p-6">
            <div className="text-2xl font-bold text-blue-600">
              {coaches.filter((c: any) => c.roles.includes('judge')).length}
            </div>
            <div className="text-sm text-gray-600">–°—É–¥–¥—ñ</div>
          </div>
          <div className="bg-white rounded-lg shadow p-6">
            <div className="text-2xl font-bold text-orange-600">
              {coaches.filter((c: any) => isLicenseExpiring(c.licenseExpiry)).length}
            </div>
            <div className="text-sm text-gray-600">–õ—ñ—Ü–µ–Ω–∑—ñ—ó –∑–∞–∫—ñ–Ω—á—É—é—Ç—å—Å—è</div>
          </div>
        </div>

        {/* Coaches Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {filteredCoaches.map((coach: any) => (
            <div key={coach.id} className="bg-white rounded-lg shadow-md p-6">

              {/* Header */}
              <div className="flex items-start justify-between mb-4">
                <div className="flex items-center">
                  <div className="h-12 w-12 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-lg">
                    {coach.name.split(' ').map((n: string) => n[0]).join('').slice(0, 2)}
                  </div>
                  <div className="ml-4">
                    <h3 className="text-lg font-semibold text-gray-900">{coach.name}</h3>
                    <p className="text-sm text-gray-500">{coach.email}</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  {coach.roles.map((role: string) => (
                    <span
                      key={role}
                      className={`px-2 py-1 text-xs font-medium rounded-full ${
                        role === 'coach'
                          ? 'bg-green-100 text-green-800'
                          : 'bg-blue-100 text-blue-800'
                      }`}
                    >
                      {role === 'coach' ? '–¢—Ä–µ–Ω–µ—Ä' : '–°—É–¥–¥—è'}
                    </span>
                  ))}
                </div>
              </div>

              {/* Info */}
              <div className="grid grid-cols-2 gap-4 mb-4 text-sm">
                <div>
                  <span className="text-gray-500">–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è:</span>
                  <div className="font-medium">{coach.specialization}</div>
                </div>
                <div>
                  <span className="text-gray-500">–î–æ—Å–≤—ñ–¥:</span>
                  <div className="font-medium">{coach.experience}</div>
                </div>
                <div>
                  <span className="text-gray-500">–ö–ª—É–±:</span>
                  <div className="font-medium">{coach.club}</div>
                </div>
                <div>
                  <span className="text-gray-500">–û–±–ª–∞—Å—Ç—å:</span>
                  <div className="font-medium">{coach.region}</div>
                </div>
              </div>

              {/* License */}
              <div className="bg-gray-50 rounded-lg p-4 mb-4">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm font-medium text-gray-700">–õ—ñ—Ü–µ–Ω–∑—ñ—è</span>
                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${
                    isLicenseExpiring(coach.licenseExpiry)
                      ? 'bg-red-100 text-red-800'
                      : 'bg-green-100 text-green-800'
                  }`}>
                    {isLicenseExpiring(coach.licenseExpiry) ? '–ó–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è' : '–î—ñ–π—Å–Ω–∞'}
                  </span>
                </div>
                <div className="text-sm text-gray-600">
                  ‚Ññ {coach.licenseNumber} ‚Ä¢ –¥–æ {new Date(coach.licenseExpiry).toLocaleDateString('uk-UA')}
                </div>
                {isLicenseExpiring(coach.licenseExpiry) && (
                  <button
                    onClick={() => handleLicenseRenewal(coach.id)}
                    className="mt-2 text-sm text-blue-600 hover:text-blue-800 font-medium"
                  >
                    üîÑ –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ª—ñ—Ü–µ–Ω–∑—ñ—é
                  </button>
                )}
              </div>

              {/* Statistics */}
              <div className="grid grid-cols-2 gap-4 mb-4 text-sm">
                <div className="text-center bg-blue-50 rounded p-2">
                  <div className="font-bold text-blue-600">{coach.athletesTrained}</div>
                  <div className="text-gray-600">–ü—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ñ–≤</div>
                </div>
                <div className="text-center bg-purple-50 rounded p-2">
                  <div className="font-bold text-purple-600">{coach.competitionsJudged}</div>
                  <div className="text-gray-600">–°—É–¥–¥—ñ–≤—Å—Ç–≤ –∑–º–∞–≥–∞–Ω—å</div>
                </div>
              </div>

              {/* Certificates */}
              <div className="mb-4">
                <span className="text-sm font-medium text-gray-700">–°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏:</span>
                <div className="mt-1 flex flex-wrap gap-1">
                  {coach.certificates.map((cert: string, index: number) => (
                    <span
                      key={index}
                      className="px-2 py-1 text-xs bg-indigo-100 text-indigo-800 rounded"
                    >
                      {cert}
                    </span>
                  ))}
                </div>
              </div>

              {/* Actions */}
              <div className="flex items-center justify-between pt-4 border-t">
                <div className="flex space-x-2">
                  <button
                    onClick={() => {
                      const currentRoles = coach.roles;
                      const hasCoach = currentRoles.includes('coach');
                      const hasJudge = currentRoles.includes('judge');

                      let newRoles = [...currentRoles];
                      if (hasCoach && hasJudge) {
                        newRoles = ['coach']; // Remove judge
                      } else if (hasCoach) {
                        newRoles = ['judge']; // Switch to judge
                      } else {
                        newRoles = ['coach', 'judge']; // Add both
                      }

                      handleRoleUpdate(coach.id, newRoles);
                    }}
                    className="text-sm text-blue-600 hover:text-blue-800 font-medium"
                  >
                    ‚ö° –ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–ª—ñ
                  </button>
                  <a
                    href={`/admin-panel/coaches/${coach.id}`}
                    className="text-sm text-green-600 hover:text-green-800 font-medium"
                  >
                    ‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                  </a>
                </div>

                <div className="flex space-x-2">
                  <button
                    onClick={() => handleBlock(coach.id, !coach.blocked)}
                    className={`text-sm font-medium ${
                      coach.blocked
                        ? 'text-green-600 hover:text-green-800'
                        : 'text-orange-600 hover:text-orange-800'
                    }`}
                  >
                    {coach.blocked ? '‚úÖ –†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏' : 'üö´ –ë–ª–æ–∫—É–≤–∞—Ç–∏'}
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>

        {filteredCoaches.length === 0 && !loading && (
          <div className="text-center py-12">
            <div className="text-gray-500 text-lg">–¢—Ä–µ–Ω–µ—Ä—ñ–≤/—Å—É–¥–¥—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</div>
          </div>
        )}
      </div>
    </div>
  );
}
