import { NextRequest, NextResponse } from 'next/server';
import { getApiSession, registerUser } from '@/lib/auth';

export async function POST(request: NextRequest) {
  try {
    const data = await request.json();
    console.log('üéì –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç—Ä–µ–Ω–µ—Ä–∞/—Å—É–¥–¥—ñ:', data);

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
    const requiredFields = ['firstName', 'lastName', 'email', 'phone', 'region', 'city', 'education', 'specialization', 'experience'];
    const missingFields = requiredFields.filter(field => !data[field]);

    if (missingFields.length > 0) {
      return NextResponse.json(
        { error: `–û–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ: ${missingFields.join(', ')}` },
        { status: 400 }
      );
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –æ–±—Ä–∞–Ω–æ —Ö–æ—á–∞ –± –æ–¥–Ω—É —Ä–æ–ª—å
    if (!data.isCoach && !data.isJudge) {
      return NextResponse.json(
        { error: '–û–±–µ—Ä—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–Ω—É —Ä–æ–ª—å: —Ç—Ä–µ–Ω–µ—Ä –∞–±–æ —Å—É–¥–¥—è' },
        { status: 400 }
      );
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(data.email)) {
      return NextResponse.json(
        { error: '–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∏' },
        { status: 400 }
      );
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—é
    const tempPassword = Math.random().toString(36).slice(-8);
    const fullName = `${data.lastName} ${data.firstName}${data.middleName ? ` ${data.middleName}` : ''}`;

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–æ–ª—ñ
    const roles = [];
    if (data.isCoach) roles.push('—Ç—Ä–µ–Ω–µ—Ä');
    if (data.isJudge) roles.push('—Å—É–¥–¥—è');
    const roleString = roles.join(' + ');

    try {
      // –°–ø—Ä–æ–±—É—î–º–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const newUser = await registerUser(data.email, tempPassword, fullName);
      console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–∏–π:', newUser.success ? newUser.user?.email || "unknown" : "error");

      // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Å —Ç—Ä–µ–Ω–µ—Ä–∞/—Å—É–¥–¥—ñ
      const coachJudgeData = {
        id: `coach-judge-${Date.now()}`,
        userId: newUser.success ? newUser.user?.id || "temp-id" : "error",
        firstName: data.firstName,
        lastName: data.lastName,
        middleName: data.middleName || '',
        fullName: fullName,
        email: data.email,
        phone: data.phone,
        region: data.region,
        city: data.city,

        // –î–∞–Ω—ñ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é –¥–ª—è –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏—Ö –∑–º–∞–≥–∞–Ω—å
        firstNameEn: data.firstNameEn || '',
        lastNameEn: data.lastNameEn || '',
        passport: data.passport || '',

        education: data.education,
        specialization: data.specialization,
        experience: data.experience,
        achievements: data.achievements || null,
        certificates: data.certificates || null,
        isCoach: data.isCoach,
        isJudge: data.isJudge,
        roles: roleString,
        role: 'coach_judge',
        registrationDate: new Date().toISOString(),
        status: 'pending_review', // –ü–æ—Ç—Ä–µ–±—É—î —Ä–æ–∑–≥–ª—è–¥—É –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–æ—ó –∫–æ–º—ñ—Å—ñ—ó
        tempPassword: tempPassword
      };

      console.log('‚úÖ –¢—Ä–µ–Ω–µ—Ä/—Å—É–¥–¥—è –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π:', coachJudgeData.fullName, '-', roleString);

      // –°–∏–º—É–ª—è—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email –∑ –ø–∞—Ä–æ–ª–µ–º
      console.log(`üìß Email —Å–∏–º—É–ª—è—Ü—ñ—è –¥–ª—è ${data.email}:`);
      console.log(`–¢–µ–º–∞: –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —Ç—Ä–µ–Ω–µ—Ä–∞/—Å—É–¥–¥—ñ –≤ –§–£–°–ê–§ –æ—Ç—Ä–∏–º–∞–Ω–∞`);
      console.log(`–í–∞—à —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: ${tempPassword}`);
      console.log(`–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å "${roleString}" –æ—Ç—Ä–∏–º–∞–Ω–∞ —ñ –±—É–¥–µ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∞ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–æ—é –∫–æ–º—ñ—Å—ñ—î—é.`);
      console.log(`–û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ç–µ—Ä–º—ñ–Ω —Ä–æ–∑–≥–ª—è–¥—É: 7-14 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤.`);

      // –°–∏–º—É–ª—è—Ü—ñ—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ–π–Ω—ñ–π –∫–æ–º—ñ—Å—ñ—ó
      console.log(`üìß –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ–π–Ω—ñ–π –∫–æ–º—ñ—Å—ñ—ó:`);
      console.log(`–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é: ${roleString}`);
      console.log(`–ö–∞–Ω–¥–∏–¥–∞—Ç: ${fullName}`);
      console.log(`Email: ${data.email}`);
      console.log(`–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è: ${data.specialization}`);
      console.log(`–î–æ—Å–≤—ñ–¥: ${data.experience.substring(0, 100)}...`);

      return NextResponse.json({
        success: true,
        message: '–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ email –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—é.',
        coachJudgeId: coachJudgeData.id,
        tempPassword: tempPassword, // –¢—ñ–ª—å–∫–∏ –¥–ª—è –¥–µ–º–æ
        roles: roleString,
        status: 'pending_review',
        expectedReviewTime: '7-14 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤',
        redirectTo: '/dashboard/coach-judge'
      });

    } catch (authError: any) {
      if (authError.message.includes('–≤–∂–µ —ñ—Å–Ω—É—î')) {
        return NextResponse.json(
          { error: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–æ—é email –∞–¥—Ä–µ—Å–æ—é –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π' },
          { status: 409 }
        );
      }
      throw authError;
    }

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ç—Ä–µ–Ω–µ—Ä–∞/—Å—É–¥–¥—ñ:', error);
    return NextResponse.json(
      { error: '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    );
  }
}
