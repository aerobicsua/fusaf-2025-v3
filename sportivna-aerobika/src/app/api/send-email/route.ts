import { NextRequest, NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è SMTP —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É
const createTransporter = () => {
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER || 'noreply.fusaf@gmail.com',
      pass: process.env.EMAIL_PASSWORD || 'your-app-password'
    }
  });
};

export async function POST(request: NextRequest) {
  try {
    const { to, subject, html, text } = await request.json();

    if (!to || !subject || !html) {
      return NextResponse.json(
        { error: '–í—ñ–¥—Å—É—Ç–Ω—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è: to, subject, html' },
        { status: 400 }
      );
    }

    const transporter = createTransporter();

    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è email
    const mailOptions = {
      from: {
        name: '–§–µ–¥–µ—Ä–∞—Ü—ñ—è –£–∫—Ä–∞—ó–Ω–∏ –∑—ñ –°–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –ê–µ—Ä–æ–±—ñ–∫–∏ —ñ –§—ñ—Ç–Ω–µ—Å—É',
        address: process.env.EMAIL_USER || 'noreply.fusaf@gmail.com'
      },
      to: to,
      subject: subject,
      html: html,
      text: text || '–¶–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –§–£–°–ê–§',
      // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –æ–ø—Ü—ñ—ó
      replyTo: 'info@fusaf.org.ua',
      headers: {
        'X-Priority': '1',
        'X-MSMail-Priority': 'High',
        'Importance': 'high'
      }
    };

    console.log('üìß –°–ø—Ä–æ–±–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email –¥–æ:', to);

    // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ email
    const info = await transporter.sendMail(mailOptions);

    console.log('‚úÖ Email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ:', info.messageId);

    return NextResponse.json({
      success: true,
      message: 'Email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ',
      messageId: info.messageId
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email:', error);

    // –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
    if (error instanceof Error) {
      console.error('Error message:', error.message);
      console.error('Error stack:', error.stack);
    }

    return NextResponse.json(
      {
        success: false,
        error: '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email',
        details: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
      },
      { status: 500 }
    );
  }
}

// –¢–µ—Å—Ç–æ–≤–∏–π endpoint
export async function GET(request: NextRequest) {
  try {
    const transporter = createTransporter();

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è
    await transporter.verify();

    return NextResponse.json({
      status: 'OK',
      message: 'Email —Å–µ—Ä–≤—ñ—Å –ø—Ä–∞—Ü—é—î',
      config: {
        service: 'Gmail SMTP',
        from: process.env.EMAIL_USER || 'noreply.fusaf@gmail.com'
      }
    });
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ email —Å–µ—Ä–≤—ñ—Å—É:', error);

    return NextResponse.json(
      {
        status: 'ERROR',
        message: 'Email —Å–µ—Ä–≤—ñ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π',
        error: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
      },
      { status: 500 }
    );
  }
}
