import { NextRequest, NextResponse } from 'next/server';
import { executeQuery } from '@/lib/mysql';

export async function GET() {
  try {
    console.log('üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ê –ú–Ü–ì–†–ê–¶–Ü–Ø: –ü–æ—á–∞—Ç–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ MySQL...');

    // –°–∏–º—É–ª—é—î–º–æ –¥–∞–Ω—ñ –∑ localStorage –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–æ–≥–æ —â–æ –±–∞—á–∏–º–æ –≤ –∫–æ–Ω—Å–æ–ª—ñ
    const clubsFromLocalStorage = [
      {
        id: 'club-1753343509330',
        name: '–§—ñ—Ç–Ω–µ—Å-–∫–ª—É–± "–¢–µ—Ö–Ω–æ–§—ñ—Ç"',
        type: 'club',
        address: '–°–∏–º–æ–Ω–µ–Ω–∫–∞ 3–≤',
        city: '–í–∏—à–≥–æ—Ä–æ–¥',
        region: '–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å',
        zipCode: '07301',
        description: '',
        legalStatus: '–ü–ü',
        website: 'https://technofit.com.ua',
        owner: {
          name: '–§–µ–¥–æ—Å–µ–Ω–∫–æ –ê–Ω–¥—Ä—ñ–π –í—ñ–∫—Ç–æ—Ä–æ–≤–∏—á',
          email: 'andfedos@gmail.com',
          phone: '+380504109083'
        },
        approvedAt: '2025-07-24T07:51:49.330Z',
        status: 'active'
      }
    ];

    console.log(`üìä –ú—ñ–≥—Ä—É—î–º–æ ${clubsFromLocalStorage.length} –∫–ª—É–±—ñ–≤...`);

    let migratedCount = 0;

    for (const club of clubsFromLocalStorage) {
      try {
        console.log(`üè¢ –û–±—Ä–æ–±–∫–∞ –∫–ª—É–±—É: ${club.name}`);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–ª—É–± –≤–∂–µ —ñ—Å–Ω—É—î
        const existingClubs = await executeQuery(`
          SELECT id FROM clubs WHERE name = ? LIMIT 1
        `, [club.name]);

        if (existingClubs.length > 0) {
          console.log(`‚è≠Ô∏è –ö–ª—É–± "${club.name}" –≤–∂–µ —ñ—Å–Ω—É—î, –æ–Ω–æ–≤–ª—é—î–º–æ...`);

          // –û–Ω–æ–≤–ª—é—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –∫–ª—É–±
          await executeQuery(`
            UPDATE clubs SET
              full_name = ?, address = ?, city = ?, region = ?,
              description = ?, legal_status = ?, website = ?,
              email = ?, phone = ?, status = ?, updated_at = NOW()
            WHERE name = ?
          `, [
            club.name,
            club.address,
            club.city,
            club.region,
            club.description,
            club.legalStatus,
            club.website,
            club.owner.email,
            club.owner.phone,
            'active',
            club.name
          ]);

          migratedCount++;
          continue;
        }

        // –®—É–∫–∞—î–º–æ –≤–ª–∞—Å–Ω–∏–∫–∞ –∑–∞ email
        let ownerId = null;
        if (club.owner?.email) {
          const ownerUsers = await executeQuery(`
            SELECT id FROM users WHERE email = ? LIMIT 1
          `, [club.owner.email]);

          if (ownerUsers.length > 0) {
            ownerId = ownerUsers[0].id;
            console.log(`üë§ –ó–Ω–∞–π–¥–µ–Ω–æ –≤–ª–∞—Å–Ω–∏–∫–∞ –≤ –ë–î: ${club.owner.email}`);
          }
        }

        // –Ø–∫—â–æ –≤–ª–∞—Å–Ω–∏–∫–∞ –Ω–µ–º–∞—î, —Å—Ç–≤–æ—Ä—é—î–º–æ
        if (!ownerId) {
          console.log(`üë§ –°—Ç–≤–æ—Ä—é—î–º–æ –≤–ª–∞—Å–Ω–∏–∫–∞: ${club.owner.name}`);
          ownerId = `user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;

          await executeQuery(`
            INSERT INTO users (
              id, email, password_hash, name, first_name, last_name,
              roles, phone, status, created_at
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())
          `, [
            ownerId,
            club.owner.email,
            '$2b$10$8O8KvK8GvK8GvK8GvK8GvOt6wX8wX8wX8wX8wX8wX8wX8wX8wX8w.',
            club.owner.name,
            '–ê–Ω–¥—Ä—ñ–π', // –ó –¥–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∏
            '–§–µ–¥–æ—Å–µ–Ω–∫–æ', // –ó –¥–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∏
            JSON.stringify(['club_owner']),
            club.owner.phone,
            'active'
          ]);

          console.log(`‚úÖ –í–ª–∞—Å–Ω–∏–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: ${ownerId}`);
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—É–± –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ä–µ–∞–ª—å–Ω–æ—ó —Å—Ö–µ–º–∏ –ë–î
        await executeQuery(`
          INSERT INTO clubs (
            id, name, full_name, address, city, region,
            description, legal_status, website, email, phone,
            owner_id, status, created_at
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())
        `, [
          club.id,
          club.name,
          club.name, // full_name = name
          club.address,
          club.city,
          club.region,
          club.description,
          club.legalStatus,
          club.website,
          club.owner.email, // email –∫–ª—É–±—É
          club.owner.phone, // phone –∫–ª—É–±—É
          ownerId,
          'active'
        ]);

        console.log(`‚úÖ –ö–ª—É–± —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: ${club.name} (ID: ${club.id})`);
        migratedCount++;

      } catch (clubError) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó –∫–ª—É–±—É "${club.name}":`, clubError);
      }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const totalClubs = await executeQuery(`
      SELECT COUNT(*) as total FROM clubs WHERE status = 'active'
    `);

    const totalUsers = await executeQuery(`
      SELECT COUNT(*) as total FROM users WHERE JSON_CONTAINS(roles, '"club_owner"')
    `);

    const clubCount = totalClubs[0]?.total || 0;
    const userCount = totalUsers[0]?.total || 0;

    console.log(`üéâ –ú–Ü–ì–†–ê–¶–Ü–Ø –ó–ê–í–ï–†–®–ï–ù–ê:`);
    console.log(`‚úÖ –ú—ñ–≥—Ä–æ–≤–∞–Ω–æ –∫–ª—É–±—ñ–≤: ${migratedCount}`);
    console.log(`üìä –í—Å—å–æ–≥–æ –∫–ª—É–±—ñ–≤ –≤ MySQL: ${clubCount}`);
    console.log(`üë• –í–ª–∞—Å–Ω–∏–∫—ñ–≤ –∫–ª—É–±—ñ–≤ –≤ MySQL: ${userCount}`);

    return NextResponse.json({
      success: true,
      message: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –º—ñ–≥—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ',
      results: {
        migratedClubs: migratedCount,
        totalClubsInDatabase: clubCount,
        totalClubOwnersInDatabase: userCount
      }
    });

  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê –ú–Ü–ì–†–ê–¶–Ü–á:', error);
    return NextResponse.json({
      success: false,
      error: '–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –º—ñ–≥—Ä–∞—Ü—ñ—ó',
      details: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
    }, { status: 500 });
  }
}
