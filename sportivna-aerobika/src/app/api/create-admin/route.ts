import { NextRequest, NextResponse } from 'next/server';
import { executeQuery } from '@/lib/mysql';
import bcrypt from 'bcryptjs';
import { v4 as uuidv4 } from 'uuid';

export async function POST(request: NextRequest) {
  try {
    console.log('üëë –°—Ç–≤–æ—Ä–µ–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –§–£–°–ê–§...');

    // –î–ª—è demo-—Ä–µ–∂–∏–º—É –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —É—Å–ø—ñ—à–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    // –í —Ä–µ–∞–ª—å–Ω–æ–º—É –¥–æ–¥–∞—Ç–∫—É —Ü—è —Ñ—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–∏–ª–∞ –± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ë–î

    console.log('‚úÖ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä aerobicsua@gmail.com –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è');

    return NextResponse.json({
      success: true,
      message: '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –§–£–°–ê–§ –≥–æ—Ç–æ–≤–∏–π!',
      credentials: {
        email: 'aerobicsua@gmail.com',
        password: 'fusaf2025'
      },
      admin: {
        id: 'admin-fusaf-2024',
        email: 'aerobicsua@gmail.com',
        name: '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –§–£–°–ê–§',
        roles: ['admin', 'user', 'coach_judge', 'club_owner']
      }
    });

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–¥–º—ñ–Ω–∞
    const hashedPassword = await bcrypt.hash('fusaf2025', 10);
    const userId = uuidv4();

    await executeQuery(`
      INSERT INTO users (
        id, email, password_hash, name, roles,
        first_name, last_name, middle_name,
        country, region, city,
        status, email_verified, membership_paid,
        created_at
      ) VALUES (
        ?, ?, ?, ?, ?,
        ?, ?, ?,
        ?, ?, ?,
        ?, ?, ?,
        NOW()
      )
    `, [
      userId,
      'aerobicsua@gmail.com',
      hashedPassword,
      '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –§–£–°–ê–§',
      '["admin", "user", "coach_judge", "club_owner"]',
      '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä', '–§–£–°–ê–§', '',
      '–£–∫—Ä–∞—ó–Ω–∞', '–º. –ö–∏—ó–≤', '–ö–∏—ó–≤',
      'active', true, true
    ]);

    console.log('‚úÖ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä aerobicsua@gmail.com —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ');

    return NextResponse.json({
      success: true,
      message: '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä aerobicsua@gmail.com —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ',
      credentials: {
        email: 'aerobicsua@gmail.com',
        password: 'fusaf2025'
      },
      admin: {
        email: 'aerobicsua@gmail.com',
        roles: ['admin', 'user', 'coach_judge', 'club_owner']
      }
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
    return NextResponse.json({
      success: false,
      error: '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
      details: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
    }, { status: 500 });
  }
}
