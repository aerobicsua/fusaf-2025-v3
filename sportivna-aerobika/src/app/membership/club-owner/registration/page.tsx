"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";

import Link from "next/link";
import { Header } from "@/components/Header";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Textarea } from "@/components/ui/textarea";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Building, UserPlus, ArrowLeft, Info, Upload } from "lucide-react";

// –°–ø–∏—Å–æ–∫ –æ–±–ª–∞—Å—Ç–µ–π –£–∫—Ä–∞—ó–Ω–∏
const REGIONS = [
  "–í—ñ–Ω–Ω–∏—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–í–æ–ª–∏–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–î–æ–Ω–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ó–∞–∫–∞—Ä–ø–∞—Ç—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ö—ñ—Ä–æ–≤–æ–≥—Ä–∞–¥—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–õ—É–≥–∞–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ú–∏–∫–æ–ª–∞—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–û–¥–µ—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–†—ñ–≤–Ω–µ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–°—É–º—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–¢–µ—Ä–Ω–æ–ø—ñ–ª—å—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–•–∞—Ä–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–•–µ—Ä—Å–æ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ß–µ—Ä–∫–∞—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ß–µ—Ä–Ω—ñ–≤–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
  "–º. –ö–∏—ó–≤",
  "–ê–† –ö—Ä–∏–º"
];

// –ü–æ—Å–∞–¥–∏ –∫–µ—Ä—ñ–≤–Ω–∏–∫—ñ–≤
const POSITIONS = [
  "–ö–µ—Ä—ñ–≤–Ω–∏–∫",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä",
  "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç",
  "–ì–æ–ª–æ–≤–∞",
  "–ó–∞—Å–Ω–æ–≤–Ω–∏–∫",
  "–í–∏–∫–æ–Ω–∞–≤—á–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
  "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä"
];

export default function ClubOwnerRegistrationPage() {

  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);
  const [formData, setFormData] = useState({
    // –û—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ
    firstName: "",
    lastName: "",
    middleName: "",
    position: "", // –ù–æ–≤–µ –ø–æ–ª–µ
    email: "",
    phone: "",
    password: "",
    confirmPassword: "",
    region: "", // –ù–æ–≤–µ –ø–æ–ª–µ
    city: "",

    // –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–ª—É–±/–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª
    clubName: "",
    clubType: "club", // club –∞–±–æ subdivision
    zipCode: "", // –ù–æ–≤–µ –ø–æ–ª–µ
    clubRegion: "", // –ù–æ–≤–µ –ø–æ–ª–µ
    clubCity: "",
    clubAddress: "",
    clubDescription: "",
    experience: "",
    achievements: "", // –ù–æ–≤–µ –ø–æ–ª–µ –¥–ª—è –¥–æ—Å—è–≥–Ω–µ–Ω—å –∫–ª—É–±—É
    legalStatus: "",
    website: "",

    // –î–æ–∫—É–º–µ–Ω—Ç–∏
    registrationDocuments: null as File | null
  });

  const [uploadedFiles, setUploadedFiles] = useState<{[key: string]: File}>({});

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleWebsiteBlur = (e: React.FocusEvent<HTMLInputElement>) => {
    const value = e.target.value.trim();
    if (value && !value.startsWith('http://') && !value.startsWith('https://')) {
      setFormData(prev => ({
        ...prev,
        website: `https://${value}`
      }));
    }
  };

  const handleSelectChange = (name: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>, fieldName: string) => {
    const file = e.target.files?.[0];
    if (file) {
      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É –ü–ï–†–ï–î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º (–º–∞–∫—Å–∏–º—É–º 2MB –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏)
      const maxSize = 2 * 1024 * 1024; // 2MB
      if (file.size > maxSize) {
        alert(`–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 2MB. –í–∞—à —Ñ–∞–π–ª: ${Math.round(file.size / 1024 / 1024)}MB`);
        e.target.value = ''; // –û—á–∏—â–∞—î–º–æ input
        return;
      }

      setUploadedFiles(prev => ({
        ...prev,
        [fieldName]: file
      }));
      setFormData(prev => ({
        ...prev,
        [fieldName]: file
      }));
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);

    try {
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –ø–æ–ª—ñ–≤
      if (!formData.firstName || !formData.lastName || !formData.middleName || !formData.email || !formData.phone || !formData.password) {
        alert('–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è');
        setIsLoading(false);
        return;
      }

      if (!formData.clubName) {
        alert('–ù–∞–∑–≤–∞ –∫–ª—É–±—É –æ–±–æ–≤\'—è–∑–∫–æ–≤–∞');
        setIsLoading(false);
        return;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–æ–ª—ñ–≤
      if (formData.password !== formData.confirmPassword) {
        alert('–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
        setIsLoading(false);
        return;
      }

      if (formData.password.length < 6) {
        alert('–ü–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤');
        setIsLoading(false);
        return;
      }

      // –°—Ç–≤–æ—Ä—é—î–º–æ FormData –¥–ª—è API —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–ª—É–±-–≤–ª–∞—Å–Ω–∏–∫–∞
      const registrationFormData = new FormData();

      // –û—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ
      registrationFormData.append('firstName', formData.firstName);
      registrationFormData.append('lastName', formData.lastName);
      registrationFormData.append('middleName', formData.middleName);
      registrationFormData.append('position', formData.position);
      registrationFormData.append('email', formData.email);
      registrationFormData.append('phone', formData.phone);
      registrationFormData.append('password', formData.password);
      registrationFormData.append('region', formData.region);
      registrationFormData.append('city', formData.city);

      // –õ–æ–≥—É–≤–∞–Ω–Ω—è FormData
      console.log('üì§ FormData –¥–ª—è API:');
      for (let [key, value] of registrationFormData.entries()) {
        if (key === 'password') {
          console.log(`  ${key}: ${value ? '‚úì –ø–∞—Ä–æ–ª—å –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è' : '‚úó –ø–∞—Ä–æ–ª—å –ø—É—Å—Ç–∏–π'} (–¥–æ–≤–∂–∏–Ω–∞: ${value.length})`);
        } else if (key === 'registrationDocuments') {
          console.log(`  ${key}: —Ñ–∞–π–ª ${value.name}`);
        } else {
          console.log(`  ${key}: ${value}`);
        }
      }

      // –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–ª—É–±
      registrationFormData.append('clubName', formData.clubName);
      registrationFormData.append('clubType', formData.clubType);
      registrationFormData.append('zipCode', formData.zipCode);
      registrationFormData.append('clubRegion', formData.clubRegion);
      registrationFormData.append('clubCity', formData.clubCity);
      registrationFormData.append('clubAddress', formData.clubAddress);
      registrationFormData.append('clubDescription', formData.clubDescription);
      registrationFormData.append('experience', formData.experience);
      registrationFormData.append('achievements', formData.achievements);
      registrationFormData.append('legalStatus', formData.legalStatus);
      registrationFormData.append('website', formData.website);

      // –î–æ–∫—É–º–µ–Ω—Ç–∏
      if (formData.registrationDocuments) {
        registrationFormData.append('registrationDocuments', formData.registrationDocuments);
      }

      // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é
      console.log('üìã –î–∞–Ω—ñ —Ñ–æ—Ä–º–∏ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:', {
        legalStatus: formData.legalStatus,
        clubType: formData.clubType,
        region: formData.region,
        clubRegion: formData.clubRegion,
        password: formData.password ? '‚úì —î –ø–∞—Ä–æ–ª—å' : '‚úó –Ω–µ–º–∞—î –ø–∞—Ä–æ–ª—è',
        passwordLength: formData.password?.length || 0,
        allFormData: formData
      });

      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞—è–≤–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏–π API
      console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–ª—É–±—É...');

      const apiResponse = await fetch('/api/club-owner-registration', {
        method: 'POST',
        body: registrationFormData,
      });

      console.log('üìä API —Å—Ç–∞—Ç—É—Å:', apiResponse.status);

      // –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —è–∫ —Ç–µ–∫—Å—Ç —Å–ø–æ—á–∞—Ç–∫—É
      const apiText = await apiResponse.text();
      console.log('üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å API:', apiText.substring(0, 200) + '...');

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ HTML –ø–æ–º–∏–ª–∫–∞ 413
      if (apiResponse.status === 413) {
        throw new Error('–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 2MB. –°–ø—Ä–æ–±—É–π—Ç–µ –º–µ–Ω—à–∏–π —Ñ–∞–π–ª.');
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —î HTML –∑–∞–º—ñ—Å—Ç—å JSON
      if (apiText.trim().startsWith('<html') || apiText.includes('<title>')) {
        throw new Error(`–°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É. –°—Ç–∞—Ç—É—Å: ${apiResponse.status}. –°–ø—Ä–æ–±—É–π—Ç–µ –º–µ–Ω—à–∏–π —Ñ–∞–π–ª.`);
      }

      // –ü–∞—Ä—Å–∏–º–æ JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å
      let apiResult;
      try {
        apiResult = JSON.parse(apiText);
      } catch (jsonError) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É JSON:', apiText.substring(0, 200));
        throw new Error('–°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      }

      if (apiResult && apiResult.success) {
        console.log('‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ API');
        setShowSuccess(true);
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
          router.push('/registration-success?type=club');
        }, 3000);
      } else {
        throw new Error(apiResult?.error || '–ü–æ–º–∏–ª–∫–∞ API —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–ª—É–±-–≤–ª–∞—Å–Ω–∏–∫–∞');
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:', error);
      alert(error instanceof Error ? error.message : '–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />

      <div className="container mx-auto px-4 py-8">
        <div className="max-w-4xl mx-auto">
          <div className="mb-6">
            <Link href="/membership/club-owner" className="inline-flex items-center text-pink-600 hover:text-pink-700 mb-4">
              <ArrowLeft className="h-4 w-4 mr-2" />
              –ù–∞–∑–∞–¥ –¥–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
            </Link>

            <div className="text-center mb-8">
              <Building className="h-16 w-16 text-pink-600 mx-auto mb-4" />
              <h1 className="text-3xl font-bold text-gray-900 mb-2">
                –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ö–µ—Ä—ñ–≤–Ω–∏–∫–∞ –ö–ª—É–±—É/–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª—É
              </h1>
              <p className="text-gray-600">
                –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —è–∫ –∫–µ—Ä—ñ–≤–Ω–∏–∫ –∫–ª—É–±—É –∞–±–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É –§–£–°–ê–§
              </p>
            </div>
          </div>

          {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö */}
          {showSuccess && (
            <Alert className="mb-6 border-green-200 bg-green-50">
              <div className="flex items-center">
                <div className="w-6 h-6 rounded-full bg-green-500 flex items-center justify-center mr-3">
                  <span className="text-white text-sm">‚úì</span>
                </div>
                <div>
                  <h4 className="text-green-800 font-medium">–ó–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –ø–æ–¥–∞–Ω–∞!</h4>
                  <AlertDescription className="text-green-700">
                    –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–ª—É–±—É –±—É–ª–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.
                    –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è –§–£–°–ê–§ —Ä–æ–∑–≥–ª—è–Ω–µ —ó—ó –ø—Ä–æ—Ç—è–≥–æ–º 3-5 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤.
                    –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –≤–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É.
                    <br />
                    <span className="text-sm font-medium text-amber-700 bg-amber-50 px-2 py-1 rounded mt-2 inline-block">
                      ‚ö†Ô∏è –í–∞–∂–ª–∏–≤–æ: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
                    </span>
                    <br />
                    <span className="text-sm">–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è...</span>
                  </AlertDescription>
                </div>
              </div>
            </Alert>
          )}

          <form onSubmit={handleSubmit} className="space-y-8">
            {/* –û—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <UserPlus className="h-5 w-5 mr-2" />
                  –û—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ
                </CardTitle>
                <CardDescription>
                  –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ –∫–ª—É–±—É/–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="lastName">–ü—Ä—ñ–∑–≤–∏—â–µ *</Label>
                    <Input
                      id="lastName"
                      name="lastName"
                      value={formData.lastName}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  <div>
                    <Label htmlFor="firstName">–Ü–º'—è *</Label>
                    <Input
                      id="firstName"
                      name="firstName"
                      value={formData.firstName}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>

                <div>
                  <Label htmlFor="middleName">–ü–æ –±–∞—Ç—å–∫–æ–≤—ñ *</Label>
                  <Input
                    id="middleName"
                    name="middleName"
                    value={formData.middleName}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div>
                  <Label htmlFor="position">–ü–æ—Å–∞–¥–∞ *</Label>
                  <select
                    value={formData.position}
                    onChange={(e) => handleSelectChange("position", e.target.value)}
                    className="w-full p-2 border rounded-md border-gray-300"
                  >
                    <option value="">–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–∞–¥—É</option>
                    {POSITIONS.map((position) => (
                      <option key={position} value={position}>
                        {position}
                      </option>
                    ))}
                  </select>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="email">Email *</Label>
                    <Input
                      id="email"
                      name="email"
                      type="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  <div>
                    <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                    <Input
                      id="phone"
                      name="phone"
                      placeholder="+380XXXXXXXXX"
                      value={formData.phone}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="password">–ü–∞—Ä–æ–ª—å *</Label>
                    <Input
                      id="password"
                      name="password"
                      type="password"
                      value={formData.password}
                      onChange={handleInputChange}
                      required
                      placeholder="–ú—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤"
                    />
                  </div>
                  <div>
                    <Label htmlFor="confirmPassword">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è *</Label>
                    <Input
                      id="confirmPassword"
                      name="confirmPassword"
                      type="password"
                      value={formData.confirmPassword}
                      onChange={handleInputChange}
                      required
                      placeholder="–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –ø–∞—Ä–æ–ª—å"
                    />
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="region">–û–±–ª–∞—Å—Ç—å *</Label>
                    <Select
                      value={formData.region}
                      onValueChange={(value) => handleSelectChange("region", value)}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–±–ª–∞—Å—Ç—å" />
                      </SelectTrigger>
                      <SelectContent>
                        {REGIONS.map((region) => (
                          <SelectItem key={region} value={region}>
                            {region}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                  <div>
                    <Label htmlFor="city">–ú—ñ—Å—Ç–æ *</Label>
                    <Input
                      id="city"
                      name="city"
                      value={formData.city}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–ª—É–±/–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Building className="h-5 w-5 mr-2" />
                  –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ö–ª—É–±/–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª
                </CardTitle>
                <CardDescription>
                  –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–∞—à –∫–ª—É–± –∞–±–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <Label htmlFor="clubName">–ù–∞–∑–≤–∞ –∫–ª—É–±—É/–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É *</Label>
                  <Input
                    id="clubName"
                    name="clubName"
                    value={formData.clubName}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div>
                  <Label htmlFor="clubType">–¢–∏–ø –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó *</Label>
                  <Select
                    value={formData.clubType}
                    onValueChange={(value) => handleSelectChange("clubType", value)}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="club">–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–ª—É–±</SelectItem>
                      <SelectItem value="subdivision">–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <Label htmlFor="zipCode">–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å *</Label>
                    <Input
                      id="zipCode"
                      name="zipCode"
                      placeholder="12345"
                      value={formData.zipCode}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  <div>
                    <Label htmlFor="clubRegion">–û–±–ª–∞—Å—Ç—å *</Label>
                    <Select
                      value={formData.clubRegion}
                      onValueChange={(value) => handleSelectChange("clubRegion", value)}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–±–ª–∞—Å—Ç—å" />
                      </SelectTrigger>
                      <SelectContent>
                        {REGIONS.map((region) => (
                          <SelectItem key={region} value={region}>
                            {region}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                  <div>
                    <Label htmlFor="clubCity">–ú—ñ—Å—Ç–æ *</Label>
                    <Input
                      id="clubCity"
                      name="clubCity"
                      value={formData.clubCity}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>

                <div>
                  <Label htmlFor="clubAddress">–ü–æ–≤–Ω–∞ –∞–¥—Ä–µ—Å–∞ *</Label>
                  <Input
                    id="clubAddress"
                    name="clubAddress"
                    placeholder="–≤—É–ª. –ù–∞–∑–≤–∞, –±—É–¥. ‚Ññ, –æ—Ñ—ñ—Å/–∫–≤. ‚Ññ"
                    value={formData.clubAddress}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div>
                  <Label htmlFor="legalStatus">–ü—Ä–∞–≤–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å *</Label>
                  <Select
                    value={formData.legalStatus}
                    onValueChange={(value) => handleSelectChange("legalStatus", value)}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="–û–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="–¢–û–í">–¢–û–í</SelectItem>
                      <SelectItem value="–ü–ü">–ü—Ä–∏–≤–∞—Ç–Ω–µ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–æ</SelectItem>
                      <SelectItem value="–§–û–ü">–§–û–ü</SelectItem>
                      <SelectItem value="–ì–û">–ì—Ä–æ–º–∞–¥—Å—å–∫–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è</SelectItem>
                      <SelectItem value="–ë–§">–ë–ª–∞–≥–æ–¥—ñ–π–Ω–∏–π —Ñ–æ–Ω–¥</SelectItem>
                      <SelectItem value="–ö–§–ì">–ö–æ–º—É–Ω–∞–ª—å–Ω–∞ —Ñ–æ—Ä–º–∞ –≥–æ—Å–ø–æ–¥–∞—Ä—é–≤–∞–Ω–Ω—è</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <Label htmlFor="clubDescription">–û–ø–∏—Å –∫–ª—É–±—É/–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É</Label>
                  <Textarea
                    id="clubDescription"
                    name="clubDescription"
                    placeholder="–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ –≤–∞—à—É –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—é, –Ω–∞–ø—Ä—è–º–∫–∏ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è..."
                    value={formData.clubDescription}
                    onChange={handleInputChange}
                    rows={4}
                  />
                </div>

                <div>
                  <Label htmlFor="experience">–î–æ—Å–≤—ñ–¥ –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–∞</Label>
                  <Textarea
                    id="experience"
                    name="experience"
                    placeholder="–í–∞—à –¥–æ—Å–≤—ñ–¥ —É —Å—Ñ–µ—Ä—ñ —Å–ø–æ—Ä—Ç—É, –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è–º–∏..."
                    value={formData.experience}
                    onChange={handleInputChange}
                    rows={3}
                  />
                </div>

                <div>
                  <Label htmlFor="achievements">–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è –∫–ª—É–±—É/–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É</Label>
                  <Textarea
                    id="achievements"
                    name="achievements"
                    placeholder="–û–ø–∏—à—ñ—Ç—å –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ –∫–ª—É–±—É: –Ω–∞–≥–æ—Ä–æ–¥–∏, –ø–µ—Ä–µ–º–æ–≥–∏ –≤ –∑–º–∞–≥–∞–Ω–Ω—è—Ö, –≤–∏–∑–Ω–∞–Ω–Ω—è..."
                    value={formData.achievements}
                    onChange={handleInputChange}
                    rows={3}
                  />
                </div>

                <div>
                  <Label htmlFor="website">–í–µ–±-—Å–∞–π—Ç (–∑–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ)</Label>
                  <Input
                    id="website"
                    name="website"
                    type="url"
                    placeholder="yourclub.com –∞–±–æ www.yourclub.com"
                    value={formData.website}
                    onChange={handleInputChange}
                    onBlur={handleWebsiteBlur}
                  />
                  <p className="text-sm text-gray-500 mt-1">
                    –í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É —Å–∞–π—Ç—É. https:// –±—É–¥–µ –¥–æ–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
                  </p>
                </div>
              </CardContent>
            </Card>

            {/* –î–æ–∫—É–º–µ–Ω—Ç–∏ */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Upload className="h-5 w-5 mr-2" />
                  –î–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
                </CardTitle>
                <CardDescription>
                  –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏, —â–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é—Ç—å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —é—Ä–∏–¥–∏—á–Ω–æ—ó –æ—Å–æ–±–∏ –∞–±–æ –§–û–ü
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <Label htmlFor="registrationDocuments">
                    –î–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –Æ—Ä–æ—Å–æ–±–∏/–§–û–ü *
                  </Label>
                  <Input
                    id="registrationDocuments"
                    type="file"
                    accept=".pdf,.jpg,.jpeg,.png"
                    onChange={(e) => handleFileChange(e, "registrationDocuments")}
                    required
                    className="mt-1"
                  />
                  <p className="text-sm text-gray-500 mt-1">
                    –ü—Ä–∏–π–Ω—è—Ç–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏: PDF, JPG, PNG. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 2 –ú–ë
                  </p>
                  {uploadedFiles.registrationDocuments && (
                    <p className="text-sm text-green-600 mt-1">
                      ‚úì –§–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {uploadedFiles.registrationDocuments.name}
                    </p>
                  )}
                </div>

                {/* –°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ */}
                <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                  <h4 className="font-medium text-blue-900 mb-2">–ù–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏:</h4>
                  <ul className="space-y-1 text-sm text-blue-800">
                    <li className="flex items-start">
                      <span className="w-1.5 h-1.5 bg-blue-600 rounded-full mt-2 mr-2 flex-shrink-0" />
                      –í–∏—Ç—è–≥ –∑ –Ñ–î–† (–¥–ª—è —é—Ä–∏–¥–∏—á–Ω–∏—Ö –æ—Å—ñ–±) –∞–±–æ —Å–≤—ñ–¥–æ—Ü—Ç–≤–æ –ø—Ä–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –§–û–ü
                    </li>
                    <li className="flex items-start">
                      <span className="w-1.5 h-1.5 bg-blue-600 rounded-full mt-2 mr-2 flex-shrink-0" />
                      –°—Ç–∞—Ç—É—Ç –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó (–¥–ª—è —é—Ä–∏–¥–∏—á–Ω–∏—Ö –æ—Å—ñ–±)
                    </li>
                    <li className="flex items-start">
                      <span className="w-1.5 h-1.5 bg-blue-600 rounded-full mt-2 mr-2 flex-shrink-0" />
                      –î–æ–≤—ñ–¥–∫–∞ –ø—Ä–æ –ø–æ–¥–∞—Ç–∫–æ–≤—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
                    </li>
                    <li className="flex items-start">
                      <span className="w-1.5 h-1.5 bg-blue-600 rounded-full mt-2 mr-2 flex-shrink-0" />
                      –î–æ–∫—É–º–µ–Ω—Ç–∏, —â–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é—Ç—å –ø—Ä–∞–≤–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—î—é
                    </li>
                  </ul>
                  <p className="text-xs text-blue-600 mt-2">
                    <strong>–ü—Ä–∏–º—ñ—Ç–∫–∞:</strong> –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –æ–¥–∏–Ω PDF —Ñ–∞–π–ª –∑ —É—Å—ñ–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∞–±–æ –æ–∫—Ä–µ–º—ñ —Å–∫–∞–Ω–∫–æ–ø—ñ—ó
                  </p>
                </div>
              </CardContent>
            </Card>

            {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è */}
            <Alert>
              <Info className="h-4 w-4" />
              <AlertDescription>
                –ü—ñ—Å–ª—è –ø–æ–¥–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏ –≤–æ–Ω–∞ –±—É–¥–µ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é –§–£–°–ê–§ –ø—Ä–æ—Ç—è–≥–æ–º 3-5 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤.
                –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ –≤–∫–∞–∑–∞–Ω—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑–≥–ª—è–¥—É.
              </AlertDescription>
            </Alert>

            {/* –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ */}
            <div className="flex justify-center">
              <Button
                type="submit"
                disabled={isLoading}
                className="w-full md:w-auto px-8 py-3 bg-pink-600 hover:bg-pink-700"
              >
                {isLoading ? "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è..." : "–ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é"}
              </Button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}
