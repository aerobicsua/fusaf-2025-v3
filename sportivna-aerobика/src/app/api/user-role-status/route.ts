import { NextResponse } from 'next/server';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/lib/auth';
import { roleRequests, initializeRequests } from '@/app/api/role-requests/route';

export async function GET() {
  try {
    const session = await getServerSession(authOptions);

    if (!session?.user?.email) {
      return NextResponse.json(
        { error: '–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è' },
        { status: 401 }
      );
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∑–∞–ø–∏—Ç–∏
    const allRequests = initializeRequests();

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userRequest = allRequests.find(
      req => req.userEmail === session.user.email && req.status === 'pending'
    );

    console.log('üîç –°—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', {
      email: session.user.email,
      hasRequest: !!userRequest,
      total: allRequests.length
    });

    return NextResponse.json({
      hasActiveRequest: !!userRequest,
      roleRequest: userRequest || null
    });

  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É:', error);
    return NextResponse.json(
      { error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    );
  }
}
